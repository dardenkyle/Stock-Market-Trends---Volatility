<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20241.24.0308.0326                               -->
<workbook original-version='18.1' source-build='2024.1.1 (20241.24.0308.0326)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='stock_data_tableau' inline='true' name='federated.1d6d9e90c84ze911ru3dw02917et' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='stock_data_tableau' name='textscan.12qdoqi0hawgi913lfeif0n7e6bc'>
            <connection class='textscan' directory='C:/Users/Kyle/Desktop/projects/Stock Market Trends &amp; Volatility' filename='stock_data_tableau.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.12qdoqi0hawgi913lfeif0n7e6bc' name='stock_data_tableau.csv' table='[stock_data_tableau#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='date' name='Date' ordinal='0' />
            <column datatype='real' name='Close' ordinal='1' />
            <column datatype='real' name='High' ordinal='2' />
            <column datatype='real' name='Low' ordinal='3' />
            <column datatype='real' name='Open' ordinal='4' />
            <column datatype='integer' name='Volume' ordinal='5' />
            <column datatype='real' name='Target_Close' ordinal='6' />
            <column datatype='real' name='SMA_50' ordinal='7' />
            <column datatype='real' name='SMA_200' ordinal='8' />
            <column datatype='real' name='Bollinger_Upper' ordinal='9' />
            <column datatype='real' name='Bollinger_Lower' ordinal='10' />
            <column datatype='real' name='RSI_14' ordinal='11' />
            <column datatype='real' name='EMA_12' ordinal='12' />
            <column datatype='real' name='EMA_26' ordinal='13' />
            <column datatype='real' name='MACD' ordinal='14' />
            <column datatype='real' name='MACD_Signal' ordinal='15' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.12qdoqi0hawgi913lfeif0n7e6bc' name='stock_data_tableau.csv' table='[stock_data_tableau#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='date' name='Date' ordinal='0' />
            <column datatype='real' name='Close' ordinal='1' />
            <column datatype='real' name='High' ordinal='2' />
            <column datatype='real' name='Low' ordinal='3' />
            <column datatype='real' name='Open' ordinal='4' />
            <column datatype='integer' name='Volume' ordinal='5' />
            <column datatype='real' name='Target_Close' ordinal='6' />
            <column datatype='real' name='SMA_50' ordinal='7' />
            <column datatype='real' name='SMA_200' ordinal='8' />
            <column datatype='real' name='Bollinger_Upper' ordinal='9' />
            <column datatype='real' name='Bollinger_Lower' ordinal='10' />
            <column datatype='real' name='RSI_14' ordinal='11' />
            <column datatype='real' name='EMA_12' ordinal='12' />
            <column datatype='real' name='EMA_26' ordinal='13' />
            <column datatype='real' name='MACD' ordinal='14' />
            <column datatype='real' name='MACD_Signal' ordinal='15' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[stock_data_tableau.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[stock_data_tableau.csv]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>0</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[stock_data_tableau.csv_86B5FF294F6848669C087C2AA8633326]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Close</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Close]</local-name>
            <parent-name>[stock_data_tableau.csv]</parent-name>
            <remote-alias>Close</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[stock_data_tableau.csv_86B5FF294F6848669C087C2AA8633326]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>High</remote-name>
            <remote-type>5</remote-type>
            <local-name>[High]</local-name>
            <parent-name>[stock_data_tableau.csv]</parent-name>
            <remote-alias>High</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[stock_data_tableau.csv_86B5FF294F6848669C087C2AA8633326]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Low</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Low]</local-name>
            <parent-name>[stock_data_tableau.csv]</parent-name>
            <remote-alias>Low</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[stock_data_tableau.csv_86B5FF294F6848669C087C2AA8633326]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Open</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Open]</local-name>
            <parent-name>[stock_data_tableau.csv]</parent-name>
            <remote-alias>Open</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[stock_data_tableau.csv_86B5FF294F6848669C087C2AA8633326]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Volume</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Volume]</local-name>
            <parent-name>[stock_data_tableau.csv]</parent-name>
            <remote-alias>Volume</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[stock_data_tableau.csv_86B5FF294F6848669C087C2AA8633326]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Target_Close</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Target_Close]</local-name>
            <parent-name>[stock_data_tableau.csv]</parent-name>
            <remote-alias>Target_Close</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[stock_data_tableau.csv_86B5FF294F6848669C087C2AA8633326]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SMA_50</remote-name>
            <remote-type>5</remote-type>
            <local-name>[SMA_50]</local-name>
            <parent-name>[stock_data_tableau.csv]</parent-name>
            <remote-alias>SMA_50</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[stock_data_tableau.csv_86B5FF294F6848669C087C2AA8633326]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SMA_200</remote-name>
            <remote-type>5</remote-type>
            <local-name>[SMA_200]</local-name>
            <parent-name>[stock_data_tableau.csv]</parent-name>
            <remote-alias>SMA_200</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[stock_data_tableau.csv_86B5FF294F6848669C087C2AA8633326]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Bollinger_Upper</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Bollinger_Upper]</local-name>
            <parent-name>[stock_data_tableau.csv]</parent-name>
            <remote-alias>Bollinger_Upper</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[stock_data_tableau.csv_86B5FF294F6848669C087C2AA8633326]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Bollinger_Lower</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Bollinger_Lower]</local-name>
            <parent-name>[stock_data_tableau.csv]</parent-name>
            <remote-alias>Bollinger_Lower</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[stock_data_tableau.csv_86B5FF294F6848669C087C2AA8633326]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>RSI_14</remote-name>
            <remote-type>5</remote-type>
            <local-name>[RSI_14]</local-name>
            <parent-name>[stock_data_tableau.csv]</parent-name>
            <remote-alias>RSI_14</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[stock_data_tableau.csv_86B5FF294F6848669C087C2AA8633326]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>EMA_12</remote-name>
            <remote-type>5</remote-type>
            <local-name>[EMA_12]</local-name>
            <parent-name>[stock_data_tableau.csv]</parent-name>
            <remote-alias>EMA_12</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[stock_data_tableau.csv_86B5FF294F6848669C087C2AA8633326]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>EMA_26</remote-name>
            <remote-type>5</remote-type>
            <local-name>[EMA_26]</local-name>
            <parent-name>[stock_data_tableau.csv]</parent-name>
            <remote-alias>EMA_26</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[stock_data_tableau.csv_86B5FF294F6848669C087C2AA8633326]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>MACD</remote-name>
            <remote-type>5</remote-type>
            <local-name>[MACD]</local-name>
            <parent-name>[stock_data_tableau.csv]</parent-name>
            <remote-alias>MACD</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[stock_data_tableau.csv_86B5FF294F6848669C087C2AA8633326]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>MACD_Signal</remote-name>
            <remote-type>5</remote-type>
            <local-name>[MACD_Signal]</local-name>
            <parent-name>[stock_data_tableau.csv]</parent-name>
            <remote-alias>MACD_Signal</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[stock_data_tableau.csv_86B5FF294F6848669C087C2AA8633326]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[federated.1d6d9e90c84ze911ru3dw02917et].[usr:Calculation_1431300302347538435:qk]&quot;' value='Avg RSI (selected dates)' />
          <alias key='&quot;[federated.1d6d9e90c84ze911ru3dw02917et].[usr:Calculation_1431300302347698180:qk]&quot;' value='Avg MACD (selected dates)' />
        </aliases>
      </column>
      <column caption='Bollinger Lower' datatype='real' name='[Bollinger_Lower]' role='measure' type='quantitative' />
      <column caption='Bollinger Upper' datatype='real' name='[Bollinger_Upper]' role='measure' type='quantitative' />
      <column caption='Buy indicator' datatype='integer' name='[Calculation_1431300302335504384]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF SUM([RSI_14]) &lt; 30 &#13;&#10;   AND LOOKUP(SUM([RSI_14]), -1) &gt;= 30 &#13;&#10;THEN 1 ELSE NULL &#13;&#10;END'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Sell indicator' datatype='integer' name='[Calculation_1431300302338121729]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF SUM([RSI_14]) &gt; 70 &#13;&#10;   AND LOOKUP(SUM([RSI_14]), -1) &lt;= 70 &#13;&#10;THEN -1 ELSE NULL &#13;&#10;END'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Avg RSI' datatype='real' name='[Calculation_1431300302347538435]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='AVG([RSI_14])' />
      </column>
      <column caption='Avg MACD' datatype='real' name='[Calculation_1431300302347698180]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='AVG([MACD])' />
      </column>
      <column caption='Total Price Change' datatype='real' name='[Calculation_1431300302347755525]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ FIXED : MAX([Close]) } - { FIXED : MIN([Close]) }' />
      </column>
      <column caption='Total Price % Change' datatype='real' name='[Calculation_1431300302349721606]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='({ FIXED : MAX([Close]) } - { FIXED : MIN([Close]) }) / { FIXED : MIN([Close]) }' />
      </column>
      <column caption='Dynamic Price Change' datatype='real' name='[Calculation_1431300302357082119]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF FIRST() = 0 THEN SUM([Close])&#13;&#10;ELSEIF LAST() = 0 THEN SUM([Close])&#13;&#10;ELSE NULL&#13;&#10;END'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='MACD Histogram' datatype='real' name='[Calculation_1752463247225729027]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[MACD] - [MACD_Signal]' />
      </column>
      <column caption='MACD Histogram Color' datatype='string' default-role='measure' default-type='quantitative' name='[Calculation_1752463247228661764]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Calculation_1752463247225729027] &gt; 0 THEN &quot;Bullish&quot;&#13;&#10;ELSE &quot;Bearish&quot;&#13;&#10;END' />
      </column>
      <column datatype='real' name='[Close]' role='measure' type='quantitative' />
      <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
      <column caption='Ema 12' datatype='real' name='[EMA_12]' role='measure' type='quantitative' />
      <column caption='Ema 26' datatype='real' name='[EMA_26]' role='measure' type='quantitative' />
      <column datatype='real' name='[High]' role='measure' type='quantitative' />
      <column datatype='real' name='[Low]' role='measure' type='quantitative' />
      <column caption='Macd' datatype='real' name='[MACD]' role='measure' type='quantitative' />
      <column caption='MACD Signal' datatype='real' name='[MACD_Signal]' role='measure' type='quantitative' />
      <column datatype='real' name='[Open]' role='measure' type='quantitative' />
      <column caption='Rsi 14' datatype='real' name='[RSI_14]' role='measure' type='quantitative' />
      <column caption='Sma 200' datatype='real' name='[SMA_200]' role='measure' type='quantitative' />
      <column caption='Sma 50' datatype='real' name='[SMA_50]' role='measure' type='quantitative' />
      <column caption='Target Close' datatype='real' name='[Target_Close]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Volume]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='stock_data_tableau.csv' datatype='table' name='[__tableau_internal_object_id__].[stock_data_tableau.csv_86B5FF294F6848669C087C2AA8633326]' role='measure' type='quantitative' />
      <column-instance column='[__tableau_internal_object_id__].[stock_data_tableau.csv_86B5FF294F6848669C087C2AA8633326]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:stock_data_tableau.csv_86B5FF294F6848669C087C2AA8633326:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Close]' derivation='Attribute' name='[attr:Close:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1752463247228661764]' derivation='Count' name='[cnt:Calculation_1752463247228661764:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Close]' derivation='None' name='[none:Close:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Bollinger_Lower]' derivation='Sum' name='[sum:Bollinger_Lower:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Bollinger_Upper]' derivation='Sum' name='[sum:Bollinger_Upper:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1752463247225729027]' derivation='Sum' name='[sum:Calculation_1752463247225729027:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Close]' derivation='Sum' name='[sum:Close:qk]' pivot='key' type='quantitative' />
      <column-instance column='[EMA_12]' derivation='Sum' name='[sum:EMA_12:qk]' pivot='key' type='quantitative' />
      <column-instance column='[EMA_26]' derivation='Sum' name='[sum:EMA_26:qk]' pivot='key' type='quantitative' />
      <column-instance column='[High]' derivation='Sum' name='[sum:High:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Low]' derivation='Sum' name='[sum:Low:qk]' pivot='key' type='quantitative' />
      <column-instance column='[MACD]' derivation='Sum' name='[sum:MACD:qk]' pivot='key' type='quantitative' />
      <column-instance column='[MACD_Signal]' derivation='Sum' name='[sum:MACD_Signal:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Open]' derivation='Sum' name='[sum:Open:qk]' pivot='key' type='quantitative' />
      <column-instance column='[RSI_14]' derivation='Sum' name='[sum:RSI_14:qk]' pivot='key' type='quantitative' />
      <column-instance column='[SMA_200]' derivation='Sum' name='[sum:SMA_200:qk]' pivot='key' type='quantitative' />
      <column-instance column='[SMA_50]' derivation='Sum' name='[sum:SMA_50:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Target_Close]' derivation='Sum' name='[sum:Target_Close:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Volume]' derivation='Sum' name='[sum:Volume:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1431300302335504384]' derivation='User' name='[usr:Calculation_1431300302335504384:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' />
      </column-instance>
      <column-instance column='[Calculation_1431300302338121729]' derivation='User' name='[usr:Calculation_1431300302338121729:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' />
      </column-instance>
      <column-instance column='[Calculation_1431300302347538435]' derivation='User' name='[usr:Calculation_1431300302347538435:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1431300302347698180]' derivation='User' name='[usr:Calculation_1431300302347698180:qk]' pivot='key' type='quantitative' />
      <group caption='Action (Date)' hidden='true' name='[Action (Date)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Date]' />
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' rowDisplayCount='100' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;[federated.1d6d9e90c84ze911ru3dw02917et].[sum:Low:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1d6d9e90c84ze911ru3dw02917et]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1d6d9e90c84ze911ru3dw02917et].[attr:Close:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1d6d9e90c84ze911ru3dw02917et].[none:Close:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1d6d9e90c84ze911ru3dw02917et].[sum:Close:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1d6d9e90c84ze911ru3dw02917et].[sum:MACD:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1d6d9e90c84ze911ru3dw02917et].[__tableau_internal_object_id__].[cnt:stock_data_tableau.csv_86B5FF294F6848669C087C2AA8633326:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1d6d9e90c84ze911ru3dw02917et].[sum:SMA_50:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1d6d9e90c84ze911ru3dw02917et].[usr:Calculation_1431300302335504384:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1d6d9e90c84ze911ru3dw02917et].[cnt:Calculation_1752463247228661764:qk]&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;[federated.1d6d9e90c84ze911ru3dw02917et].[sum:Open:qk]&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;[federated.1d6d9e90c84ze911ru3dw02917et].[sum:EMA_12:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.1d6d9e90c84ze911ru3dw02917et].[sum:Bollinger_Lower:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.1d6d9e90c84ze911ru3dw02917et].[sum:RSI_14:qk]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[federated.1d6d9e90c84ze911ru3dw02917et].[sum:EMA_26:qk]&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;[federated.1d6d9e90c84ze911ru3dw02917et].[sum:Target_Close:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1d6d9e90c84ze911ru3dw02917et].[sum:MACD_Signal:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1d6d9e90c84ze911ru3dw02917et].[sum:SMA_200:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1d6d9e90c84ze911ru3dw02917et].[usr:Calculation_1431300302338121729:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.1d6d9e90c84ze911ru3dw02917et].[usr:Calculation_1752463247217102848:qk]&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;[federated.1d6d9e90c84ze911ru3dw02917et].[sum:High:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1d6d9e90c84ze911ru3dw02917et].[sum:Bollinger_Upper:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1d6d9e90c84ze911ru3dw02917et].[sum:Calculation_1752463247225729027:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1d6d9e90c84ze911ru3dw02917et].[sum:Close:qk]:1&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;[federated.1d6d9e90c84ze911ru3dw02917et].[sum:Volume:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='stock_data_tableau.csv' id='stock_data_tableau.csv_86B5FF294F6848669C087C2AA8633326'>
            <properties context=''>
              <relation connection='textscan.12qdoqi0hawgi913lfeif0n7e6bc' name='stock_data_tableau.csv' table='[stock_data_tableau#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='date' name='Date' ordinal='0' />
                  <column datatype='real' name='Close' ordinal='1' />
                  <column datatype='real' name='High' ordinal='2' />
                  <column datatype='real' name='Low' ordinal='3' />
                  <column datatype='real' name='Open' ordinal='4' />
                  <column datatype='integer' name='Volume' ordinal='5' />
                  <column datatype='real' name='Target_Close' ordinal='6' />
                  <column datatype='real' name='SMA_50' ordinal='7' />
                  <column datatype='real' name='SMA_200' ordinal='8' />
                  <column datatype='real' name='Bollinger_Upper' ordinal='9' />
                  <column datatype='real' name='Bollinger_Lower' ordinal='10' />
                  <column datatype='real' name='RSI_14' ordinal='11' />
                  <column datatype='real' name='EMA_12' ordinal='12' />
                  <column datatype='real' name='EMA_26' ordinal='13' />
                  <column datatype='real' name='MACD' ordinal='14' />
                  <column datatype='real' name='MACD_Signal' ordinal='15' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <shared-views>
    <shared-view name='federated.1d6d9e90c84ze911ru3dw02917et'>
      <datasources>
        <datasource caption='stock_data_tableau' name='federated.1d6d9e90c84ze911ru3dw02917et' />
      </datasources>
      <datasource-dependencies datasource='federated.1d6d9e90c84ze911ru3dw02917et'>
        <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
        <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
      <filter class='quantitative' column='[federated.1d6d9e90c84ze911ru3dw02917et].[none:Date:qk]' included-values='in-range-or-null'>
        <min>#2024-01-01#</min>
        <max>#2024-12-31#</max>
      </filter>
    </shared-view>
  </shared-views>
  <actions>
    <action caption='&lt;[Date]&gt;' name='[Action2_B9BA9FB66BF243FEA702F42993E26DBC]'>
      <activation type='on-select' />
      <source type='sheet' worksheet='Stock Price Trend with SMA &amp; Bollinger Bands' />
      <link caption='&lt;[Date]&gt;' delimiter=',' escape='\' expression='tsl:RSI%20Indicator?%5Bfederated.1d6d9e90c84ze911ru3dw02917et%5D.%5BDate%5D~s0=&lt;[federated.1d6d9e90c84ze911ru3dw02917et].[Date]~na&gt;' include-null='true' multi-select='true' url-escape='true' />
      <command command='tsc:tsl-filter'>
        <param name='target' value='RSI Indicator' />
      </command>
    </action>
    <action caption='Highlight 1 (generated)' name='[Action2_FB462DD4319648D8825AFDCA399282A6]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='AAPL Stock Analysis Dashboard' type='sheet' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Measure Names' />
        <param name='target' value='AAPL Stock Analysis Dashboard' />
      </command>
    </action>
    <action caption='Filter1' name='[Action3_11408427C85A416F987AEEA47BEA9E8A]'>
      <activation type='on-select' />
      <source type='sheet' worksheet='Stock Price Trend with SMA &amp; Bollinger Bands' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='MACD' />
      </command>
    </action>
    <action caption='Highlight 2 (generated)' name='[Action4_61420AFCBCB14EE1A4FE9CAD959C70ED]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='RSI Indicator' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Measure Names' />
        <param name='target' value='RSI Indicator' />
      </command>
    </action>
    <datasources>
      <datasource caption='stock_data_tableau' name='federated.1d6d9e90c84ze911ru3dw02917et' />
    </datasources>
    <datasource-dependencies datasource='federated.1d6d9e90c84ze911ru3dw02917et'>
      <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
    </datasource-dependencies>
  </actions>
  <worksheets>
    <worksheet name='MACD'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#000000' fontname='Benton Sans Book'>MACD</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='stock_data_tableau' name='federated.1d6d9e90c84ze911ru3dw02917et' />
          </datasources>
          <datasource-dependencies datasource='federated.1d6d9e90c84ze911ru3dw02917et'>
            <column caption='Buy indicator' datatype='integer' name='[Calculation_1431300302335504384]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF SUM([RSI_14]) &lt; 30 &#13;&#10;   AND LOOKUP(SUM([RSI_14]), -1) &gt;= 30 &#13;&#10;THEN 1 ELSE NULL &#13;&#10;END'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Sell indicator' datatype='integer' name='[Calculation_1431300302338121729]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF SUM([RSI_14]) &gt; 70 &#13;&#10;   AND LOOKUP(SUM([RSI_14]), -1) &lt;= 70 &#13;&#10;THEN -1 ELSE NULL &#13;&#10;END'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='MACD Histogram' datatype='real' name='[Calculation_1752463247225729027]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[MACD] - [MACD_Signal]' />
            </column>
            <column caption='MACD Histogram Color' datatype='string' default-role='measure' default-type='quantitative' name='[Calculation_1752463247228661764]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_1752463247225729027] &gt; 0 THEN &quot;Bullish&quot;&#13;&#10;ELSE &quot;Bearish&quot;&#13;&#10;END' />
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column caption='Macd' datatype='real' name='[MACD]' role='measure' type='quantitative' />
            <column caption='MACD Signal' datatype='real' name='[MACD_Signal]' role='measure' type='quantitative' />
            <column caption='Rsi 14' datatype='real' name='[RSI_14]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1752463247228661764]' derivation='Count' name='[cnt:Calculation_1752463247228661764:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1752463247225729027]' derivation='Sum' name='[sum:Calculation_1752463247225729027:qk]' pivot='key' type='quantitative' />
            <column-instance column='[MACD]' derivation='Sum' name='[sum:MACD:qk]' pivot='key' type='quantitative' />
            <column-instance column='[MACD_Signal]' derivation='Sum' name='[sum:MACD_Signal:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1431300302335504384]' derivation='User' name='[usr:Calculation_1431300302335504384:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
            <column-instance column='[Calculation_1431300302338121729]' derivation='User' name='[usr:Calculation_1431300302338121729:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1d6d9e90c84ze911ru3dw02917et].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1d6d9e90c84ze911ru3dw02917et].[sum:MACD_Signal:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1d6d9e90c84ze911ru3dw02917et].[sum:MACD:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1d6d9e90c84ze911ru3dw02917et].[Action (Date)]'>
            <groupfilter function='union' user:ui-action-filter='[Action3_11408427C85A416F987AEEA47BEA9E8A]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[Date]' member='#2024-01-02#' />
              <groupfilter function='member' level='[Date]' member='#2024-01-03#' />
              <groupfilter function='member' level='[Date]' member='#2024-01-04#' />
              <groupfilter function='member' level='[Date]' member='#2024-01-05#' />
              <groupfilter function='member' level='[Date]' member='#2024-01-08#' />
              <groupfilter function='member' level='[Date]' member='#2024-01-09#' />
              <groupfilter function='member' level='[Date]' member='#2024-01-10#' />
              <groupfilter function='member' level='[Date]' member='#2024-01-11#' />
              <groupfilter function='member' level='[Date]' member='#2024-01-12#' />
              <groupfilter function='member' level='[Date]' member='#2024-01-16#' />
              <groupfilter function='member' level='[Date]' member='#2024-01-17#' />
              <groupfilter function='member' level='[Date]' member='#2024-01-18#' />
              <groupfilter function='member' level='[Date]' member='#2024-01-19#' />
              <groupfilter function='member' level='[Date]' member='#2024-01-22#' />
              <groupfilter function='member' level='[Date]' member='#2024-01-23#' />
              <groupfilter function='member' level='[Date]' member='#2024-01-24#' />
              <groupfilter function='member' level='[Date]' member='#2024-01-25#' />
              <groupfilter function='member' level='[Date]' member='#2024-01-26#' />
              <groupfilter function='member' level='[Date]' member='#2024-01-29#' />
              <groupfilter function='member' level='[Date]' member='#2024-01-30#' />
              <groupfilter function='member' level='[Date]' member='#2024-01-31#' />
              <groupfilter function='member' level='[Date]' member='#2024-02-01#' />
              <groupfilter function='member' level='[Date]' member='#2024-02-02#' />
              <groupfilter function='member' level='[Date]' member='#2024-02-05#' />
              <groupfilter function='member' level='[Date]' member='#2024-02-06#' />
              <groupfilter function='member' level='[Date]' member='#2024-02-07#' />
              <groupfilter function='member' level='[Date]' member='#2024-02-08#' />
              <groupfilter function='member' level='[Date]' member='#2024-02-09#' />
              <groupfilter function='member' level='[Date]' member='#2024-02-12#' />
              <groupfilter function='member' level='[Date]' member='#2024-02-13#' />
              <groupfilter function='member' level='[Date]' member='#2024-02-14#' />
              <groupfilter function='member' level='[Date]' member='#2024-02-15#' />
              <groupfilter function='member' level='[Date]' member='#2024-02-16#' />
              <groupfilter function='member' level='[Date]' member='#2024-02-20#' />
              <groupfilter function='member' level='[Date]' member='#2024-02-21#' />
              <groupfilter function='member' level='[Date]' member='#2024-02-22#' />
              <groupfilter function='member' level='[Date]' member='#2024-02-23#' />
              <groupfilter function='member' level='[Date]' member='#2024-02-26#' />
              <groupfilter function='member' level='[Date]' member='#2024-02-27#' />
              <groupfilter function='member' level='[Date]' member='#2024-02-28#' />
              <groupfilter function='member' level='[Date]' member='#2024-02-29#' />
              <groupfilter function='member' level='[Date]' member='#2024-03-01#' />
              <groupfilter function='member' level='[Date]' member='#2024-03-04#' />
              <groupfilter function='member' level='[Date]' member='#2024-03-05#' />
              <groupfilter function='member' level='[Date]' member='#2024-03-06#' />
              <groupfilter function='member' level='[Date]' member='#2024-03-07#' />
              <groupfilter function='member' level='[Date]' member='#2024-03-08#' />
              <groupfilter function='member' level='[Date]' member='#2024-03-11#' />
              <groupfilter function='member' level='[Date]' member='#2024-03-12#' />
              <groupfilter function='member' level='[Date]' member='#2024-03-13#' />
              <groupfilter function='member' level='[Date]' member='#2024-03-14#' />
              <groupfilter function='member' level='[Date]' member='#2024-03-15#' />
              <groupfilter function='member' level='[Date]' member='#2024-03-18#' />
              <groupfilter function='member' level='[Date]' member='#2024-03-19#' />
              <groupfilter function='member' level='[Date]' member='#2024-03-20#' />
              <groupfilter function='member' level='[Date]' member='#2024-03-21#' />
              <groupfilter function='member' level='[Date]' member='#2024-03-22#' />
              <groupfilter function='member' level='[Date]' member='#2024-03-25#' />
              <groupfilter function='member' level='[Date]' member='#2024-03-26#' />
              <groupfilter function='member' level='[Date]' member='#2024-03-27#' />
              <groupfilter function='member' level='[Date]' member='#2024-03-28#' />
              <groupfilter function='member' level='[Date]' member='#2024-04-01#' />
              <groupfilter function='member' level='[Date]' member='#2024-04-02#' />
              <groupfilter function='member' level='[Date]' member='#2024-04-03#' />
              <groupfilter function='member' level='[Date]' member='#2024-04-04#' />
              <groupfilter function='member' level='[Date]' member='#2024-04-05#' />
              <groupfilter function='member' level='[Date]' member='#2024-04-08#' />
              <groupfilter function='member' level='[Date]' member='#2024-04-09#' />
              <groupfilter function='member' level='[Date]' member='#2024-04-10#' />
              <groupfilter function='member' level='[Date]' member='#2024-04-11#' />
              <groupfilter function='member' level='[Date]' member='#2024-04-12#' />
              <groupfilter function='member' level='[Date]' member='#2024-04-15#' />
              <groupfilter function='member' level='[Date]' member='#2024-04-16#' />
              <groupfilter function='member' level='[Date]' member='#2024-04-17#' />
              <groupfilter function='member' level='[Date]' member='#2024-04-18#' />
              <groupfilter function='member' level='[Date]' member='#2024-04-19#' />
              <groupfilter function='member' level='[Date]' member='#2024-04-22#' />
              <groupfilter function='member' level='[Date]' member='#2024-04-23#' />
              <groupfilter function='member' level='[Date]' member='#2024-04-24#' />
              <groupfilter function='member' level='[Date]' member='#2024-04-25#' />
              <groupfilter function='member' level='[Date]' member='#2024-04-26#' />
              <groupfilter function='member' level='[Date]' member='#2024-04-29#' />
              <groupfilter function='member' level='[Date]' member='#2024-04-30#' />
              <groupfilter function='member' level='[Date]' member='#2024-05-01#' />
              <groupfilter function='member' level='[Date]' member='#2024-05-02#' />
              <groupfilter function='member' level='[Date]' member='#2024-05-03#' />
              <groupfilter function='member' level='[Date]' member='#2024-05-06#' />
              <groupfilter function='member' level='[Date]' member='#2024-05-07#' />
              <groupfilter function='member' level='[Date]' member='#2024-05-08#' />
              <groupfilter function='member' level='[Date]' member='#2024-05-09#' />
              <groupfilter function='member' level='[Date]' member='#2024-05-10#' />
              <groupfilter function='member' level='[Date]' member='#2024-05-13#' />
              <groupfilter function='member' level='[Date]' member='#2024-05-14#' />
              <groupfilter function='member' level='[Date]' member='#2024-05-15#' />
              <groupfilter function='member' level='[Date]' member='#2024-05-16#' />
              <groupfilter function='member' level='[Date]' member='#2024-05-17#' />
              <groupfilter function='member' level='[Date]' member='#2024-05-20#' />
              <groupfilter function='member' level='[Date]' member='#2024-05-21#' />
              <groupfilter function='member' level='[Date]' member='#2024-05-22#' />
              <groupfilter function='member' level='[Date]' member='#2024-05-23#' />
              <groupfilter function='member' level='[Date]' member='#2024-05-24#' />
              <groupfilter function='member' level='[Date]' member='#2024-05-28#' />
              <groupfilter function='member' level='[Date]' member='#2024-05-29#' />
              <groupfilter function='member' level='[Date]' member='#2024-05-30#' />
              <groupfilter function='member' level='[Date]' member='#2024-05-31#' />
              <groupfilter function='member' level='[Date]' member='#2024-06-03#' />
              <groupfilter function='member' level='[Date]' member='#2024-06-04#' />
              <groupfilter function='member' level='[Date]' member='#2024-06-05#' />
              <groupfilter function='member' level='[Date]' member='#2024-06-06#' />
              <groupfilter function='member' level='[Date]' member='#2024-06-07#' />
              <groupfilter function='member' level='[Date]' member='#2024-06-10#' />
              <groupfilter function='member' level='[Date]' member='#2024-06-11#' />
              <groupfilter function='member' level='[Date]' member='#2024-06-12#' />
              <groupfilter function='member' level='[Date]' member='#2024-06-13#' />
              <groupfilter function='member' level='[Date]' member='#2024-06-14#' />
              <groupfilter function='member' level='[Date]' member='#2024-06-17#' />
              <groupfilter function='member' level='[Date]' member='#2024-06-18#' />
              <groupfilter function='member' level='[Date]' member='#2024-06-20#' />
              <groupfilter function='member' level='[Date]' member='#2024-06-21#' />
              <groupfilter function='member' level='[Date]' member='#2024-06-24#' />
              <groupfilter function='member' level='[Date]' member='#2024-06-25#' />
              <groupfilter function='member' level='[Date]' member='#2024-06-26#' />
              <groupfilter function='member' level='[Date]' member='#2024-06-27#' />
              <groupfilter function='member' level='[Date]' member='#2024-06-28#' />
              <groupfilter function='member' level='[Date]' member='#2024-07-01#' />
              <groupfilter function='member' level='[Date]' member='#2024-07-02#' />
              <groupfilter function='member' level='[Date]' member='#2024-07-03#' />
              <groupfilter function='member' level='[Date]' member='#2024-07-05#' />
              <groupfilter function='member' level='[Date]' member='#2024-07-08#' />
              <groupfilter function='member' level='[Date]' member='#2024-07-09#' />
              <groupfilter function='member' level='[Date]' member='#2024-07-10#' />
              <groupfilter function='member' level='[Date]' member='#2024-07-11#' />
              <groupfilter function='member' level='[Date]' member='#2024-07-12#' />
              <groupfilter function='member' level='[Date]' member='#2024-07-15#' />
              <groupfilter function='member' level='[Date]' member='#2024-07-16#' />
              <groupfilter function='member' level='[Date]' member='#2024-07-17#' />
              <groupfilter function='member' level='[Date]' member='#2024-07-18#' />
              <groupfilter function='member' level='[Date]' member='#2024-07-19#' />
              <groupfilter function='member' level='[Date]' member='#2024-07-22#' />
              <groupfilter function='member' level='[Date]' member='#2024-07-23#' />
              <groupfilter function='member' level='[Date]' member='#2024-07-24#' />
              <groupfilter function='member' level='[Date]' member='#2024-07-25#' />
              <groupfilter function='member' level='[Date]' member='#2024-07-26#' />
              <groupfilter function='member' level='[Date]' member='#2024-07-29#' />
              <groupfilter function='member' level='[Date]' member='#2024-07-30#' />
              <groupfilter function='member' level='[Date]' member='#2024-07-31#' />
              <groupfilter function='member' level='[Date]' member='#2024-08-01#' />
              <groupfilter function='member' level='[Date]' member='#2024-08-02#' />
              <groupfilter function='member' level='[Date]' member='#2024-08-05#' />
              <groupfilter function='member' level='[Date]' member='#2024-08-06#' />
              <groupfilter function='member' level='[Date]' member='#2024-08-07#' />
              <groupfilter function='member' level='[Date]' member='#2024-08-08#' />
              <groupfilter function='member' level='[Date]' member='#2024-08-09#' />
              <groupfilter function='member' level='[Date]' member='#2024-08-12#' />
              <groupfilter function='member' level='[Date]' member='#2024-08-13#' />
              <groupfilter function='member' level='[Date]' member='#2024-08-14#' />
              <groupfilter function='member' level='[Date]' member='#2024-08-15#' />
              <groupfilter function='member' level='[Date]' member='#2024-08-16#' />
              <groupfilter function='member' level='[Date]' member='#2024-08-19#' />
              <groupfilter function='member' level='[Date]' member='#2024-08-20#' />
              <groupfilter function='member' level='[Date]' member='#2024-08-21#' />
              <groupfilter function='member' level='[Date]' member='#2024-08-22#' />
              <groupfilter function='member' level='[Date]' member='#2024-08-23#' />
              <groupfilter function='member' level='[Date]' member='#2024-08-26#' />
              <groupfilter function='member' level='[Date]' member='#2024-08-27#' />
              <groupfilter function='member' level='[Date]' member='#2024-08-28#' />
              <groupfilter function='member' level='[Date]' member='#2024-08-29#' />
              <groupfilter function='member' level='[Date]' member='#2024-08-30#' />
              <groupfilter function='member' level='[Date]' member='#2024-09-03#' />
              <groupfilter function='member' level='[Date]' member='#2024-09-04#' />
              <groupfilter function='member' level='[Date]' member='#2024-09-05#' />
              <groupfilter function='member' level='[Date]' member='#2024-09-06#' />
              <groupfilter function='member' level='[Date]' member='#2024-09-09#' />
              <groupfilter function='member' level='[Date]' member='#2024-09-10#' />
              <groupfilter function='member' level='[Date]' member='#2024-09-11#' />
              <groupfilter function='member' level='[Date]' member='#2024-09-12#' />
              <groupfilter function='member' level='[Date]' member='#2024-09-13#' />
              <groupfilter function='member' level='[Date]' member='#2024-09-16#' />
              <groupfilter function='member' level='[Date]' member='#2024-09-17#' />
              <groupfilter function='member' level='[Date]' member='#2024-09-18#' />
              <groupfilter function='member' level='[Date]' member='#2024-09-19#' />
              <groupfilter function='member' level='[Date]' member='#2024-09-20#' />
              <groupfilter function='member' level='[Date]' member='#2024-09-23#' />
              <groupfilter function='member' level='[Date]' member='#2024-09-24#' />
              <groupfilter function='member' level='[Date]' member='#2024-09-25#' />
              <groupfilter function='member' level='[Date]' member='#2024-09-26#' />
              <groupfilter function='member' level='[Date]' member='#2024-09-27#' />
              <groupfilter function='member' level='[Date]' member='#2024-09-30#' />
              <groupfilter function='member' level='[Date]' member='#2024-10-01#' />
              <groupfilter function='member' level='[Date]' member='#2024-10-02#' />
              <groupfilter function='member' level='[Date]' member='#2024-10-03#' />
              <groupfilter function='member' level='[Date]' member='#2024-10-04#' />
              <groupfilter function='member' level='[Date]' member='#2024-10-07#' />
              <groupfilter function='member' level='[Date]' member='#2024-10-08#' />
              <groupfilter function='member' level='[Date]' member='#2024-10-09#' />
              <groupfilter function='member' level='[Date]' member='#2024-10-10#' />
              <groupfilter function='member' level='[Date]' member='#2024-10-11#' />
              <groupfilter function='member' level='[Date]' member='#2024-10-14#' />
              <groupfilter function='member' level='[Date]' member='#2024-10-15#' />
              <groupfilter function='member' level='[Date]' member='#2024-10-16#' />
              <groupfilter function='member' level='[Date]' member='#2024-10-17#' />
              <groupfilter function='member' level='[Date]' member='#2024-10-18#' />
              <groupfilter function='member' level='[Date]' member='#2024-10-21#' />
              <groupfilter function='member' level='[Date]' member='#2024-10-22#' />
              <groupfilter function='member' level='[Date]' member='#2024-10-23#' />
              <groupfilter function='member' level='[Date]' member='#2024-10-24#' />
              <groupfilter function='member' level='[Date]' member='#2024-10-25#' />
              <groupfilter function='member' level='[Date]' member='#2024-10-28#' />
              <groupfilter function='member' level='[Date]' member='#2024-10-29#' />
              <groupfilter function='member' level='[Date]' member='#2024-10-30#' />
              <groupfilter function='member' level='[Date]' member='#2024-10-31#' />
              <groupfilter function='member' level='[Date]' member='#2024-11-01#' />
              <groupfilter function='member' level='[Date]' member='#2024-11-04#' />
              <groupfilter function='member' level='[Date]' member='#2024-11-05#' />
              <groupfilter function='member' level='[Date]' member='#2024-11-06#' />
              <groupfilter function='member' level='[Date]' member='#2024-11-07#' />
              <groupfilter function='member' level='[Date]' member='#2024-11-08#' />
              <groupfilter function='member' level='[Date]' member='#2024-11-11#' />
              <groupfilter function='member' level='[Date]' member='#2024-11-12#' />
              <groupfilter function='member' level='[Date]' member='#2024-11-13#' />
              <groupfilter function='member' level='[Date]' member='#2024-11-14#' />
              <groupfilter function='member' level='[Date]' member='#2024-11-15#' />
              <groupfilter function='member' level='[Date]' member='#2024-11-18#' />
              <groupfilter function='member' level='[Date]' member='#2024-11-19#' />
              <groupfilter function='member' level='[Date]' member='#2024-11-20#' />
              <groupfilter function='member' level='[Date]' member='#2024-11-21#' />
              <groupfilter function='member' level='[Date]' member='#2024-11-22#' />
              <groupfilter function='member' level='[Date]' member='#2024-11-25#' />
              <groupfilter function='member' level='[Date]' member='#2024-11-26#' />
              <groupfilter function='member' level='[Date]' member='#2024-11-27#' />
              <groupfilter function='member' level='[Date]' member='#2024-11-29#' />
              <groupfilter function='member' level='[Date]' member='#2024-12-02#' />
              <groupfilter function='member' level='[Date]' member='#2024-12-03#' />
              <groupfilter function='member' level='[Date]' member='#2024-12-04#' />
              <groupfilter function='member' level='[Date]' member='#2024-12-05#' />
              <groupfilter function='member' level='[Date]' member='#2024-12-06#' />
              <groupfilter function='member' level='[Date]' member='#2024-12-09#' />
              <groupfilter function='member' level='[Date]' member='#2024-12-10#' />
              <groupfilter function='member' level='[Date]' member='#2024-12-11#' />
              <groupfilter function='member' level='[Date]' member='#2024-12-12#' />
              <groupfilter function='member' level='[Date]' member='#2024-12-13#' />
              <groupfilter function='member' level='[Date]' member='#2024-12-16#' />
              <groupfilter function='member' level='[Date]' member='#2024-12-17#' />
              <groupfilter function='member' level='[Date]' member='#2024-12-18#' />
              <groupfilter function='member' level='[Date]' member='#2024-12-19#' />
              <groupfilter function='member' level='[Date]' member='#2024-12-20#' />
              <groupfilter function='member' level='[Date]' member='#2024-12-23#' />
              <groupfilter function='member' level='[Date]' member='#2024-12-24#' />
              <groupfilter function='member' level='[Date]' member='#2024-12-26#' />
              <groupfilter function='member' level='[Date]' member='#2024-12-27#' />
              <groupfilter function='member' level='[Date]' member='#2024-12-30#' />
              <groupfilter function='member' level='[Date]' member='#2024-12-31#' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.1d6d9e90c84ze911ru3dw02917et].[cnt:Calculation_1752463247228661764:qk]' included-values='in-range'>
            <min>1</min>
            <max>1</max>
          </filter>
          <slices>
            <column>[federated.1d6d9e90c84ze911ru3dw02917et].[:Measure Names]</column>
            <column>[federated.1d6d9e90c84ze911ru3dw02917et].[Action (Date)]</column>
            <column>[federated.1d6d9e90c84ze911ru3dw02917et].[cnt:Calculation_1752463247228661764:qk]</column>
            <column>[federated.1d6d9e90c84ze911ru3dw02917et].[none:Date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1d6d9e90c84ze911ru3dw02917et].[sum:Calculation_1752463247225729027:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <encoding attr='space' class='0' field='[federated.1d6d9e90c84ze911ru3dw02917et].[usr:Calculation_1431300302338121729:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1d6d9e90c84ze911ru3dw02917et].[cnt:Calculation_1752463247228661764:qk]' palette='orange_blue_diverging_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='show-null-value-warning' value='false' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' value='1' />
            <format attr='line-visibility' value='on' />
            <format attr='line-pattern-only' value='solid' />
          </style-rule>
        </style>
        <panes>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
          </pane>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1d6d9e90c84ze911ru3dw02917et].[Multiple Values]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1d6d9e90c84ze911ru3dw02917et].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='6' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1d6d9e90c84ze911ru3dw02917et].[sum:Calculation_1752463247225729027:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1d6d9e90c84ze911ru3dw02917et].[cnt:Calculation_1752463247228661764:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.064972378313541412' />
                <format attr='has-stroke' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='7' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1d6d9e90c84ze911ru3dw02917et].[usr:Calculation_1431300302335504384:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1d6d9e90c84ze911ru3dw02917et].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='shape' value='triangle' />
                <format attr='mark-color' value='#59a14f' />
                <format attr='size' value='1.6591712236404419' />
              </style-rule>
            </style>
          </pane>
          <pane id='8' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1d6d9e90c84ze911ru3dw02917et].[usr:Calculation_1431300302338121729:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1d6d9e90c84ze911ru3dw02917et].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='shape' value='down-triangle' />
                <format attr='mark-color' value='#e15759' />
                <format attr='size' value='1.5932043790817261' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1d6d9e90c84ze911ru3dw02917et].[Multiple Values] + ([federated.1d6d9e90c84ze911ru3dw02917et].[sum:Calculation_1752463247225729027:qk] + ([federated.1d6d9e90c84ze911ru3dw02917et].[usr:Calculation_1431300302335504384:qk] + [federated.1d6d9e90c84ze911ru3dw02917et].[usr:Calculation_1431300302338121729:qk])))</rows>
        <cols>[federated.1d6d9e90c84ze911ru3dw02917et].[none:Date:qk]</cols>
      </table>
      <simple-id uuid='{6A776873-8417-403E-BC28-9A25E0FE44EC}' />
    </worksheet>
    <worksheet name='Performance Summary'>
      <table>
        <view>
          <datasources>
            <datasource caption='stock_data_tableau' name='federated.1d6d9e90c84ze911ru3dw02917et' />
          </datasources>
          <datasource-dependencies datasource='federated.1d6d9e90c84ze911ru3dw02917et'>
            <column caption='Avg RSI' datatype='real' name='[Calculation_1431300302347538435]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([RSI_14])' />
            </column>
            <column caption='Avg MACD' datatype='real' name='[Calculation_1431300302347698180]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([MACD])' />
            </column>
            <column caption='Total Price Change' datatype='real' name='[Calculation_1431300302347755525]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ FIXED : MAX([Close]) } - { FIXED : MIN([Close]) }' />
            </column>
            <column caption='Total Price % Change' datatype='real' name='[Calculation_1431300302349721606]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='({ FIXED : MAX([Close]) } - { FIXED : MIN([Close]) }) / { FIXED : MIN([Close]) }' />
            </column>
            <column caption='Dynamic Price Change' datatype='real' name='[Calculation_1431300302357082119]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF FIRST() = 0 THEN SUM([Close])&#13;&#10;ELSEIF LAST() = 0 THEN SUM([Close])&#13;&#10;ELSE NULL&#13;&#10;END'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='real' name='[Close]' role='measure' type='quantitative' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column caption='Macd' datatype='real' name='[MACD]' role='measure' type='quantitative' />
            <column caption='Rsi 14' datatype='real' name='[RSI_14]' role='measure' type='quantitative' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1431300302347755525]' derivation='Sum' name='[sum:Calculation_1431300302347755525:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1431300302349721606]' derivation='Sum' name='[sum:Calculation_1431300302349721606:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1431300302347538435]' derivation='User' name='[usr:Calculation_1431300302347538435:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1431300302347698180]' derivation='User' name='[usr:Calculation_1431300302347698180:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1431300302357082119]' derivation='User' name='[usr:Calculation_1431300302357082119:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1d6d9e90c84ze911ru3dw02917et].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1d6d9e90c84ze911ru3dw02917et].[usr:Calculation_1431300302347698180:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1d6d9e90c84ze911ru3dw02917et].[usr:Calculation_1431300302347538435:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1d6d9e90c84ze911ru3dw02917et].[sum:Calculation_1431300302349721606:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1d6d9e90c84ze911ru3dw02917et].[sum:Calculation_1431300302347755525:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1d6d9e90c84ze911ru3dw02917et].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1d6d9e90c84ze911ru3dw02917et].[usr:Calculation_1431300302347698180:qk]&quot;</bucket>
              <bucket>&quot;[federated.1d6d9e90c84ze911ru3dw02917et].[usr:Calculation_1431300302347538435:qk]&quot;</bucket>
              <bucket>&quot;[federated.1d6d9e90c84ze911ru3dw02917et].[sum:Calculation_1431300302349721606:qk]&quot;</bucket>
              <bucket>&quot;[federated.1d6d9e90c84ze911ru3dw02917et].[sum:Calculation_1431300302347755525:qk]&quot;</bucket>
              <bucket>&quot;[federated.1d6d9e90c84ze911ru3dw02917et].[usr:Calculation_1431300302357082119:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1d6d9e90c84ze911ru3dw02917et].[:Measure Names]</column>
            <column>[federated.1d6d9e90c84ze911ru3dw02917et].[none:Date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1d6d9e90c84ze911ru3dw02917et].[sum:Calculation_1431300302347755525:qk]' value='C1033%' />
            <format attr='text-format' field='[federated.1d6d9e90c84ze911ru3dw02917et].[sum:Calculation_1431300302349721606:qk]' value='p0.00%' />
            <format attr='text-format' field='[federated.1d6d9e90c84ze911ru3dw02917et].[usr:Calculation_1431300302357082119:qk]' value='' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.1d6d9e90c84ze911ru3dw02917et].[:Measure Names]' value='180' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1d6d9e90c84ze911ru3dw02917et].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1d6d9e90c84ze911ru3dw02917et].[:Measure Names]</rows>
        <cols />
      </table>
      <simple-id uuid='{A2D2A652-F178-406F-BE85-1AB88C08849D}' />
    </worksheet>
    <worksheet name='RSI Indicator'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#000000' fontname='Benton Sans Book' fontsize='18'>RSI Indicator</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='stock_data_tableau' name='federated.1d6d9e90c84ze911ru3dw02917et' />
          </datasources>
          <datasource-dependencies datasource='federated.1d6d9e90c84ze911ru3dw02917et'>
            <column caption='Buy indicator' datatype='integer' name='[Calculation_1431300302335504384]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF SUM([RSI_14]) &lt; 30 &#13;&#10;   AND LOOKUP(SUM([RSI_14]), -1) &gt;= 30 &#13;&#10;THEN 1 ELSE NULL &#13;&#10;END'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Sell indicator' datatype='integer' name='[Calculation_1431300302338121729]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF SUM([RSI_14]) &gt; 70 &#13;&#10;   AND LOOKUP(SUM([RSI_14]), -1) &lt;= 70 &#13;&#10;THEN -1 ELSE NULL &#13;&#10;END'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column caption='Rsi 14' datatype='real' name='[RSI_14]' role='measure' type='quantitative' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[RSI_14]' derivation='Sum' name='[sum:RSI_14:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1431300302335504384]' derivation='User' name='[usr:Calculation_1431300302335504384:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
            <column-instance column='[Calculation_1431300302338121729]' derivation='User' name='[usr:Calculation_1431300302338121729:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1d6d9e90c84ze911ru3dw02917et].[Action (Date)]'>
            <groupfilter function='union' user:ui-action-filter='[Action2_B9BA9FB66BF243FEA702F42993E26DBC]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[Date]' member='#2024-01-02#' />
              <groupfilter function='member' level='[Date]' member='#2024-01-03#' />
              <groupfilter function='member' level='[Date]' member='#2024-01-04#' />
              <groupfilter function='member' level='[Date]' member='#2024-01-05#' />
              <groupfilter function='member' level='[Date]' member='#2024-01-08#' />
              <groupfilter function='member' level='[Date]' member='#2024-01-09#' />
              <groupfilter function='member' level='[Date]' member='#2024-01-10#' />
              <groupfilter function='member' level='[Date]' member='#2024-01-11#' />
              <groupfilter function='member' level='[Date]' member='#2024-01-12#' />
              <groupfilter function='member' level='[Date]' member='#2024-01-16#' />
              <groupfilter function='member' level='[Date]' member='#2024-01-17#' />
              <groupfilter function='member' level='[Date]' member='#2024-01-18#' />
              <groupfilter function='member' level='[Date]' member='#2024-01-19#' />
              <groupfilter function='member' level='[Date]' member='#2024-01-22#' />
              <groupfilter function='member' level='[Date]' member='#2024-01-23#' />
              <groupfilter function='member' level='[Date]' member='#2024-01-24#' />
              <groupfilter function='member' level='[Date]' member='#2024-01-25#' />
              <groupfilter function='member' level='[Date]' member='#2024-01-26#' />
              <groupfilter function='member' level='[Date]' member='#2024-01-29#' />
              <groupfilter function='member' level='[Date]' member='#2024-01-30#' />
              <groupfilter function='member' level='[Date]' member='#2024-01-31#' />
              <groupfilter function='member' level='[Date]' member='#2024-02-01#' />
              <groupfilter function='member' level='[Date]' member='#2024-02-02#' />
              <groupfilter function='member' level='[Date]' member='#2024-02-05#' />
              <groupfilter function='member' level='[Date]' member='#2024-02-06#' />
              <groupfilter function='member' level='[Date]' member='#2024-02-07#' />
              <groupfilter function='member' level='[Date]' member='#2024-02-08#' />
              <groupfilter function='member' level='[Date]' member='#2024-02-09#' />
              <groupfilter function='member' level='[Date]' member='#2024-02-12#' />
              <groupfilter function='member' level='[Date]' member='#2024-02-13#' />
              <groupfilter function='member' level='[Date]' member='#2024-02-14#' />
              <groupfilter function='member' level='[Date]' member='#2024-02-15#' />
              <groupfilter function='member' level='[Date]' member='#2024-02-16#' />
              <groupfilter function='member' level='[Date]' member='#2024-02-20#' />
              <groupfilter function='member' level='[Date]' member='#2024-02-21#' />
              <groupfilter function='member' level='[Date]' member='#2024-02-22#' />
              <groupfilter function='member' level='[Date]' member='#2024-02-23#' />
              <groupfilter function='member' level='[Date]' member='#2024-02-26#' />
              <groupfilter function='member' level='[Date]' member='#2024-02-27#' />
              <groupfilter function='member' level='[Date]' member='#2024-02-28#' />
              <groupfilter function='member' level='[Date]' member='#2024-02-29#' />
              <groupfilter function='member' level='[Date]' member='#2024-03-01#' />
              <groupfilter function='member' level='[Date]' member='#2024-03-04#' />
              <groupfilter function='member' level='[Date]' member='#2024-03-05#' />
              <groupfilter function='member' level='[Date]' member='#2024-03-06#' />
              <groupfilter function='member' level='[Date]' member='#2024-03-07#' />
              <groupfilter function='member' level='[Date]' member='#2024-03-08#' />
              <groupfilter function='member' level='[Date]' member='#2024-03-11#' />
              <groupfilter function='member' level='[Date]' member='#2024-03-12#' />
              <groupfilter function='member' level='[Date]' member='#2024-03-13#' />
              <groupfilter function='member' level='[Date]' member='#2024-03-14#' />
              <groupfilter function='member' level='[Date]' member='#2024-03-15#' />
              <groupfilter function='member' level='[Date]' member='#2024-03-18#' />
              <groupfilter function='member' level='[Date]' member='#2024-03-19#' />
              <groupfilter function='member' level='[Date]' member='#2024-03-20#' />
              <groupfilter function='member' level='[Date]' member='#2024-03-21#' />
              <groupfilter function='member' level='[Date]' member='#2024-03-22#' />
              <groupfilter function='member' level='[Date]' member='#2024-03-25#' />
              <groupfilter function='member' level='[Date]' member='#2024-03-26#' />
              <groupfilter function='member' level='[Date]' member='#2024-03-27#' />
              <groupfilter function='member' level='[Date]' member='#2024-03-28#' />
              <groupfilter function='member' level='[Date]' member='#2024-04-01#' />
              <groupfilter function='member' level='[Date]' member='#2024-04-02#' />
              <groupfilter function='member' level='[Date]' member='#2024-04-03#' />
              <groupfilter function='member' level='[Date]' member='#2024-04-04#' />
              <groupfilter function='member' level='[Date]' member='#2024-04-05#' />
              <groupfilter function='member' level='[Date]' member='#2024-04-08#' />
              <groupfilter function='member' level='[Date]' member='#2024-04-09#' />
              <groupfilter function='member' level='[Date]' member='#2024-04-10#' />
              <groupfilter function='member' level='[Date]' member='#2024-04-11#' />
              <groupfilter function='member' level='[Date]' member='#2024-04-12#' />
              <groupfilter function='member' level='[Date]' member='#2024-04-15#' />
              <groupfilter function='member' level='[Date]' member='#2024-04-16#' />
              <groupfilter function='member' level='[Date]' member='#2024-04-17#' />
              <groupfilter function='member' level='[Date]' member='#2024-04-18#' />
              <groupfilter function='member' level='[Date]' member='#2024-04-19#' />
              <groupfilter function='member' level='[Date]' member='#2024-04-22#' />
              <groupfilter function='member' level='[Date]' member='#2024-04-23#' />
              <groupfilter function='member' level='[Date]' member='#2024-04-24#' />
              <groupfilter function='member' level='[Date]' member='#2024-04-25#' />
              <groupfilter function='member' level='[Date]' member='#2024-04-26#' />
              <groupfilter function='member' level='[Date]' member='#2024-04-29#' />
              <groupfilter function='member' level='[Date]' member='#2024-04-30#' />
              <groupfilter function='member' level='[Date]' member='#2024-05-01#' />
              <groupfilter function='member' level='[Date]' member='#2024-05-02#' />
              <groupfilter function='member' level='[Date]' member='#2024-05-03#' />
              <groupfilter function='member' level='[Date]' member='#2024-05-06#' />
              <groupfilter function='member' level='[Date]' member='#2024-05-07#' />
              <groupfilter function='member' level='[Date]' member='#2024-05-08#' />
              <groupfilter function='member' level='[Date]' member='#2024-05-09#' />
              <groupfilter function='member' level='[Date]' member='#2024-05-10#' />
              <groupfilter function='member' level='[Date]' member='#2024-05-13#' />
              <groupfilter function='member' level='[Date]' member='#2024-05-14#' />
              <groupfilter function='member' level='[Date]' member='#2024-05-15#' />
              <groupfilter function='member' level='[Date]' member='#2024-05-16#' />
              <groupfilter function='member' level='[Date]' member='#2024-05-17#' />
              <groupfilter function='member' level='[Date]' member='#2024-05-20#' />
              <groupfilter function='member' level='[Date]' member='#2024-05-21#' />
              <groupfilter function='member' level='[Date]' member='#2024-05-22#' />
              <groupfilter function='member' level='[Date]' member='#2024-05-23#' />
              <groupfilter function='member' level='[Date]' member='#2024-05-24#' />
              <groupfilter function='member' level='[Date]' member='#2024-05-28#' />
              <groupfilter function='member' level='[Date]' member='#2024-05-29#' />
              <groupfilter function='member' level='[Date]' member='#2024-05-30#' />
              <groupfilter function='member' level='[Date]' member='#2024-05-31#' />
              <groupfilter function='member' level='[Date]' member='#2024-06-03#' />
              <groupfilter function='member' level='[Date]' member='#2024-06-04#' />
              <groupfilter function='member' level='[Date]' member='#2024-06-05#' />
              <groupfilter function='member' level='[Date]' member='#2024-06-06#' />
              <groupfilter function='member' level='[Date]' member='#2024-06-07#' />
              <groupfilter function='member' level='[Date]' member='#2024-06-10#' />
              <groupfilter function='member' level='[Date]' member='#2024-06-11#' />
              <groupfilter function='member' level='[Date]' member='#2024-06-12#' />
              <groupfilter function='member' level='[Date]' member='#2024-06-13#' />
              <groupfilter function='member' level='[Date]' member='#2024-06-14#' />
              <groupfilter function='member' level='[Date]' member='#2024-06-17#' />
              <groupfilter function='member' level='[Date]' member='#2024-06-18#' />
              <groupfilter function='member' level='[Date]' member='#2024-06-20#' />
              <groupfilter function='member' level='[Date]' member='#2024-06-21#' />
              <groupfilter function='member' level='[Date]' member='#2024-06-24#' />
              <groupfilter function='member' level='[Date]' member='#2024-06-25#' />
              <groupfilter function='member' level='[Date]' member='#2024-06-26#' />
              <groupfilter function='member' level='[Date]' member='#2024-06-27#' />
              <groupfilter function='member' level='[Date]' member='#2024-06-28#' />
              <groupfilter function='member' level='[Date]' member='#2024-07-01#' />
              <groupfilter function='member' level='[Date]' member='#2024-07-02#' />
              <groupfilter function='member' level='[Date]' member='#2024-07-03#' />
              <groupfilter function='member' level='[Date]' member='#2024-07-05#' />
              <groupfilter function='member' level='[Date]' member='#2024-07-08#' />
              <groupfilter function='member' level='[Date]' member='#2024-07-09#' />
              <groupfilter function='member' level='[Date]' member='#2024-07-10#' />
              <groupfilter function='member' level='[Date]' member='#2024-07-11#' />
              <groupfilter function='member' level='[Date]' member='#2024-07-12#' />
              <groupfilter function='member' level='[Date]' member='#2024-07-15#' />
              <groupfilter function='member' level='[Date]' member='#2024-07-16#' />
              <groupfilter function='member' level='[Date]' member='#2024-07-17#' />
              <groupfilter function='member' level='[Date]' member='#2024-07-18#' />
              <groupfilter function='member' level='[Date]' member='#2024-07-19#' />
              <groupfilter function='member' level='[Date]' member='#2024-07-22#' />
              <groupfilter function='member' level='[Date]' member='#2024-07-23#' />
              <groupfilter function='member' level='[Date]' member='#2024-07-24#' />
              <groupfilter function='member' level='[Date]' member='#2024-07-25#' />
              <groupfilter function='member' level='[Date]' member='#2024-07-26#' />
              <groupfilter function='member' level='[Date]' member='#2024-07-29#' />
              <groupfilter function='member' level='[Date]' member='#2024-07-30#' />
              <groupfilter function='member' level='[Date]' member='#2024-07-31#' />
              <groupfilter function='member' level='[Date]' member='#2024-08-01#' />
              <groupfilter function='member' level='[Date]' member='#2024-08-02#' />
              <groupfilter function='member' level='[Date]' member='#2024-08-05#' />
              <groupfilter function='member' level='[Date]' member='#2024-08-06#' />
              <groupfilter function='member' level='[Date]' member='#2024-08-07#' />
              <groupfilter function='member' level='[Date]' member='#2024-08-08#' />
              <groupfilter function='member' level='[Date]' member='#2024-08-09#' />
              <groupfilter function='member' level='[Date]' member='#2024-08-12#' />
              <groupfilter function='member' level='[Date]' member='#2024-08-13#' />
              <groupfilter function='member' level='[Date]' member='#2024-08-14#' />
              <groupfilter function='member' level='[Date]' member='#2024-08-15#' />
              <groupfilter function='member' level='[Date]' member='#2024-08-16#' />
              <groupfilter function='member' level='[Date]' member='#2024-08-19#' />
              <groupfilter function='member' level='[Date]' member='#2024-08-20#' />
              <groupfilter function='member' level='[Date]' member='#2024-08-21#' />
              <groupfilter function='member' level='[Date]' member='#2024-08-22#' />
              <groupfilter function='member' level='[Date]' member='#2024-08-23#' />
              <groupfilter function='member' level='[Date]' member='#2024-08-26#' />
              <groupfilter function='member' level='[Date]' member='#2024-08-27#' />
              <groupfilter function='member' level='[Date]' member='#2024-08-28#' />
              <groupfilter function='member' level='[Date]' member='#2024-08-29#' />
              <groupfilter function='member' level='[Date]' member='#2024-08-30#' />
              <groupfilter function='member' level='[Date]' member='#2024-09-03#' />
              <groupfilter function='member' level='[Date]' member='#2024-09-04#' />
              <groupfilter function='member' level='[Date]' member='#2024-09-05#' />
              <groupfilter function='member' level='[Date]' member='#2024-09-06#' />
              <groupfilter function='member' level='[Date]' member='#2024-09-09#' />
              <groupfilter function='member' level='[Date]' member='#2024-09-10#' />
              <groupfilter function='member' level='[Date]' member='#2024-09-11#' />
              <groupfilter function='member' level='[Date]' member='#2024-09-12#' />
              <groupfilter function='member' level='[Date]' member='#2024-09-13#' />
              <groupfilter function='member' level='[Date]' member='#2024-09-16#' />
              <groupfilter function='member' level='[Date]' member='#2024-09-17#' />
              <groupfilter function='member' level='[Date]' member='#2024-09-18#' />
              <groupfilter function='member' level='[Date]' member='#2024-09-19#' />
              <groupfilter function='member' level='[Date]' member='#2024-09-20#' />
              <groupfilter function='member' level='[Date]' member='#2024-09-23#' />
              <groupfilter function='member' level='[Date]' member='#2024-09-24#' />
              <groupfilter function='member' level='[Date]' member='#2024-09-25#' />
              <groupfilter function='member' level='[Date]' member='#2024-09-26#' />
              <groupfilter function='member' level='[Date]' member='#2024-09-27#' />
              <groupfilter function='member' level='[Date]' member='#2024-09-30#' />
              <groupfilter function='member' level='[Date]' member='#2024-10-01#' />
              <groupfilter function='member' level='[Date]' member='#2024-10-02#' />
              <groupfilter function='member' level='[Date]' member='#2024-10-03#' />
              <groupfilter function='member' level='[Date]' member='#2024-10-04#' />
              <groupfilter function='member' level='[Date]' member='#2024-10-07#' />
              <groupfilter function='member' level='[Date]' member='#2024-10-08#' />
              <groupfilter function='member' level='[Date]' member='#2024-10-09#' />
              <groupfilter function='member' level='[Date]' member='#2024-10-10#' />
              <groupfilter function='member' level='[Date]' member='#2024-10-11#' />
              <groupfilter function='member' level='[Date]' member='#2024-10-14#' />
              <groupfilter function='member' level='[Date]' member='#2024-10-15#' />
              <groupfilter function='member' level='[Date]' member='#2024-10-16#' />
              <groupfilter function='member' level='[Date]' member='#2024-10-17#' />
              <groupfilter function='member' level='[Date]' member='#2024-10-18#' />
              <groupfilter function='member' level='[Date]' member='#2024-10-21#' />
              <groupfilter function='member' level='[Date]' member='#2024-10-22#' />
              <groupfilter function='member' level='[Date]' member='#2024-10-23#' />
              <groupfilter function='member' level='[Date]' member='#2024-10-24#' />
              <groupfilter function='member' level='[Date]' member='#2024-10-25#' />
              <groupfilter function='member' level='[Date]' member='#2024-10-28#' />
              <groupfilter function='member' level='[Date]' member='#2024-10-29#' />
              <groupfilter function='member' level='[Date]' member='#2024-10-30#' />
              <groupfilter function='member' level='[Date]' member='#2024-10-31#' />
              <groupfilter function='member' level='[Date]' member='#2024-11-01#' />
              <groupfilter function='member' level='[Date]' member='#2024-11-04#' />
              <groupfilter function='member' level='[Date]' member='#2024-11-05#' />
              <groupfilter function='member' level='[Date]' member='#2024-11-06#' />
              <groupfilter function='member' level='[Date]' member='#2024-11-07#' />
              <groupfilter function='member' level='[Date]' member='#2024-11-08#' />
              <groupfilter function='member' level='[Date]' member='#2024-11-11#' />
              <groupfilter function='member' level='[Date]' member='#2024-11-12#' />
              <groupfilter function='member' level='[Date]' member='#2024-11-13#' />
              <groupfilter function='member' level='[Date]' member='#2024-11-14#' />
              <groupfilter function='member' level='[Date]' member='#2024-11-15#' />
              <groupfilter function='member' level='[Date]' member='#2024-11-18#' />
              <groupfilter function='member' level='[Date]' member='#2024-11-19#' />
              <groupfilter function='member' level='[Date]' member='#2024-11-20#' />
              <groupfilter function='member' level='[Date]' member='#2024-11-21#' />
              <groupfilter function='member' level='[Date]' member='#2024-11-22#' />
              <groupfilter function='member' level='[Date]' member='#2024-11-25#' />
              <groupfilter function='member' level='[Date]' member='#2024-11-26#' />
              <groupfilter function='member' level='[Date]' member='#2024-11-27#' />
              <groupfilter function='member' level='[Date]' member='#2024-11-29#' />
              <groupfilter function='member' level='[Date]' member='#2024-12-02#' />
              <groupfilter function='member' level='[Date]' member='#2024-12-03#' />
              <groupfilter function='member' level='[Date]' member='#2024-12-04#' />
              <groupfilter function='member' level='[Date]' member='#2024-12-05#' />
              <groupfilter function='member' level='[Date]' member='#2024-12-06#' />
              <groupfilter function='member' level='[Date]' member='#2024-12-09#' />
              <groupfilter function='member' level='[Date]' member='#2024-12-10#' />
              <groupfilter function='member' level='[Date]' member='#2024-12-11#' />
              <groupfilter function='member' level='[Date]' member='#2024-12-12#' />
              <groupfilter function='member' level='[Date]' member='#2024-12-13#' />
              <groupfilter function='member' level='[Date]' member='#2024-12-16#' />
              <groupfilter function='member' level='[Date]' member='#2024-12-17#' />
              <groupfilter function='member' level='[Date]' member='#2024-12-18#' />
              <groupfilter function='member' level='[Date]' member='#2024-12-19#' />
              <groupfilter function='member' level='[Date]' member='#2024-12-20#' />
              <groupfilter function='member' level='[Date]' member='#2024-12-23#' />
              <groupfilter function='member' level='[Date]' member='#2024-12-24#' />
              <groupfilter function='member' level='[Date]' member='#2024-12-26#' />
              <groupfilter function='member' level='[Date]' member='#2024-12-27#' />
              <groupfilter function='member' level='[Date]' member='#2024-12-30#' />
              <groupfilter function='member' level='[Date]' member='#2024-12-31#' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1d6d9e90c84ze911ru3dw02917et].[Action (Date)]</column>
            <column>[federated.1d6d9e90c84ze911ru3dw02917et].[none:Date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1d6d9e90c84ze911ru3dw02917et].[usr:Calculation_1431300302338121729:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
          <style-rule element='table'>
            <format attr='show-null-value-warning' value='false' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='fill-above' id='refline2' value='#00000000' />
            <format attr='fill-below' id='refline2' value='#00000000' />
            <format attr='fill-above' id='refline1' value='#00000000' />
            <format attr='fill-below' id='refline1' value='#00000000' />
            <format attr='stroke-color' id='refline2' value='#e15759' />
            <format attr='stroke-color' id='refline1' value='#59a14f' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <reference-line axis-column='[federated.1d6d9e90c84ze911ru3dw02917et].[none:Date:qk]' enable-instant-analytics='true' formula='min' id='refline0' label-type='value' scope='per-table' value-column='[federated.1d6d9e90c84ze911ru3dw02917et].[none:Date:qk]' z-order='1' />
            <reference-line axis-column='[federated.1d6d9e90c84ze911ru3dw02917et].[sum:RSI_14:qk]' enable-instant-analytics='true' formula='constant' id='refline1' label='Oversold' label-type='custom' scope='per-table' value='30.0' value-column='[federated.1d6d9e90c84ze911ru3dw02917et].[sum:RSI_14:qk]' z-order='3' />
            <reference-line axis-column='[federated.1d6d9e90c84ze911ru3dw02917et].[sum:RSI_14:qk]' enable-instant-analytics='true' formula='constant' id='refline2' label='Overbought' label-type='custom' scope='per-table' value='70.0' value-column='[federated.1d6d9e90c84ze911ru3dw02917et].[sum:RSI_14:qk]' z-order='2' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1d6d9e90c84ze911ru3dw02917et].[sum:RSI_14:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1d6d9e90c84ze911ru3dw02917et].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1d6d9e90c84ze911ru3dw02917et].[usr:Calculation_1431300302338121729:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1d6d9e90c84ze911ru3dw02917et].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='shape' value='down-triangle' />
                <format attr='mark-color' value='#e15759' />
                <format attr='size' value='1.6591712236404419' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1d6d9e90c84ze911ru3dw02917et].[usr:Calculation_1431300302335504384:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#59a14f' />
                <format attr='shape' value='triangle' />
                <format attr='size' value='1.5712155103683472' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1d6d9e90c84ze911ru3dw02917et].[sum:RSI_14:qk] + ([federated.1d6d9e90c84ze911ru3dw02917et].[usr:Calculation_1431300302335504384:qk] + [federated.1d6d9e90c84ze911ru3dw02917et].[usr:Calculation_1431300302338121729:qk]))</rows>
        <cols>[federated.1d6d9e90c84ze911ru3dw02917et].[none:Date:qk]</cols>
      </table>
      <simple-id uuid='{0492D77D-6FFC-4AD6-91EE-72EB0684BFDC}' />
    </worksheet>
    <worksheet name='Stock Price Trend with SMA &amp; Bollinger Bands'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#000000' fontname='Benton Sans Book' fontsize='18'>Stock Price Trend with SMA &amp; Bollinger Bands</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='stock_data_tableau' name='federated.1d6d9e90c84ze911ru3dw02917et' />
          </datasources>
          <datasource-dependencies datasource='federated.1d6d9e90c84ze911ru3dw02917et'>
            <column caption='Bollinger Lower' datatype='real' name='[Bollinger_Lower]' role='measure' type='quantitative' />
            <column caption='Bollinger Upper' datatype='real' name='[Bollinger_Upper]' role='measure' type='quantitative' />
            <column datatype='real' name='[Close]' role='measure' type='quantitative' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column caption='Ema 12' datatype='real' name='[EMA_12]' role='measure' type='quantitative' />
            <column caption='Ema 26' datatype='real' name='[EMA_26]' role='measure' type='quantitative' />
            <column datatype='real' name='[High]' role='measure' type='quantitative' />
            <column datatype='real' name='[Low]' role='measure' type='quantitative' />
            <column caption='Macd' datatype='real' name='[MACD]' role='measure' type='quantitative' />
            <column caption='MACD Signal' datatype='real' name='[MACD_Signal]' role='measure' type='quantitative' />
            <column datatype='real' name='[Open]' role='measure' type='quantitative' />
            <column caption='Rsi 14' datatype='real' name='[RSI_14]' role='measure' type='quantitative' />
            <column caption='Sma 200' datatype='real' name='[SMA_200]' role='measure' type='quantitative' />
            <column caption='Sma 50' datatype='real' name='[SMA_50]' role='measure' type='quantitative' />
            <column caption='Target Close' datatype='real' name='[Target_Close]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Volume]' role='measure' type='quantitative' />
            <_.fcp.ObjectModelTableType.false...column caption='stock_data_tableau.csv' datatype='integer' name='[__tableau_internal_object_id__].[stock_data_tableau.csv_86B5FF294F6848669C087C2AA8633326]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[stock_data_tableau.csv_86B5FF294F6848669C087C2AA8633326]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:stock_data_tableau.csv_86B5FF294F6848669C087C2AA8633326:qk]' pivot='key' type='quantitative' />
            <_.fcp.ObjectModelTableType.true...column caption='stock_data_tableau.csv' datatype='table' name='[__tableau_internal_object_id__].[stock_data_tableau.csv_86B5FF294F6848669C087C2AA8633326]' role='measure' type='quantitative' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Bollinger_Lower]' derivation='Sum' name='[sum:Bollinger_Lower:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Bollinger_Upper]' derivation='Sum' name='[sum:Bollinger_Upper:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Close]' derivation='Sum' name='[sum:Close:qk]' pivot='key' type='quantitative' />
            <column-instance column='[EMA_12]' derivation='Sum' name='[sum:EMA_12:qk]' pivot='key' type='quantitative' />
            <column-instance column='[EMA_26]' derivation='Sum' name='[sum:EMA_26:qk]' pivot='key' type='quantitative' />
            <column-instance column='[High]' derivation='Sum' name='[sum:High:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Low]' derivation='Sum' name='[sum:Low:qk]' pivot='key' type='quantitative' />
            <column-instance column='[MACD]' derivation='Sum' name='[sum:MACD:qk]' pivot='key' type='quantitative' />
            <column-instance column='[MACD_Signal]' derivation='Sum' name='[sum:MACD_Signal:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Open]' derivation='Sum' name='[sum:Open:qk]' pivot='key' type='quantitative' />
            <column-instance column='[RSI_14]' derivation='Sum' name='[sum:RSI_14:qk]' pivot='key' type='quantitative' />
            <column-instance column='[SMA_200]' derivation='Sum' name='[sum:SMA_200:qk]' pivot='key' type='quantitative' />
            <column-instance column='[SMA_50]' derivation='Sum' name='[sum:SMA_50:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Target_Close]' derivation='Sum' name='[sum:Target_Close:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Volume]' derivation='Sum' name='[sum:Volume:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1d6d9e90c84ze911ru3dw02917et].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1d6d9e90c84ze911ru3dw02917et].[sum:Bollinger_Lower:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1d6d9e90c84ze911ru3dw02917et].[sum:Bollinger_Upper:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1d6d9e90c84ze911ru3dw02917et].[sum:SMA_200:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1d6d9e90c84ze911ru3dw02917et].[sum:SMA_50:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1d6d9e90c84ze911ru3dw02917et].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1d6d9e90c84ze911ru3dw02917et].[sum:Bollinger_Lower:qk]&quot;</bucket>
              <bucket>&quot;[federated.1d6d9e90c84ze911ru3dw02917et].[sum:Bollinger_Upper:qk]&quot;</bucket>
              <bucket>&quot;[federated.1d6d9e90c84ze911ru3dw02917et].[sum:Close:qk]&quot;</bucket>
              <bucket>&quot;[federated.1d6d9e90c84ze911ru3dw02917et].[__tableau_internal_object_id__].[cnt:stock_data_tableau.csv_86B5FF294F6848669C087C2AA8633326:qk]&quot;</bucket>
              <bucket>&quot;[federated.1d6d9e90c84ze911ru3dw02917et].[sum:EMA_12:qk]&quot;</bucket>
              <bucket>&quot;[federated.1d6d9e90c84ze911ru3dw02917et].[sum:EMA_26:qk]&quot;</bucket>
              <bucket>&quot;[federated.1d6d9e90c84ze911ru3dw02917et].[sum:High:qk]&quot;</bucket>
              <bucket>&quot;[federated.1d6d9e90c84ze911ru3dw02917et].[sum:Low:qk]&quot;</bucket>
              <bucket>&quot;[federated.1d6d9e90c84ze911ru3dw02917et].[sum:MACD_Signal:qk]&quot;</bucket>
              <bucket>&quot;[federated.1d6d9e90c84ze911ru3dw02917et].[sum:MACD:qk]&quot;</bucket>
              <bucket>&quot;[federated.1d6d9e90c84ze911ru3dw02917et].[sum:Open:qk]&quot;</bucket>
              <bucket>&quot;[federated.1d6d9e90c84ze911ru3dw02917et].[sum:RSI_14:qk]&quot;</bucket>
              <bucket>&quot;[federated.1d6d9e90c84ze911ru3dw02917et].[sum:SMA_200:qk]&quot;</bucket>
              <bucket>&quot;[federated.1d6d9e90c84ze911ru3dw02917et].[sum:SMA_50:qk]&quot;</bucket>
              <bucket>&quot;[federated.1d6d9e90c84ze911ru3dw02917et].[sum:Target_Close:qk]&quot;</bucket>
              <bucket>&quot;[federated.1d6d9e90c84ze911ru3dw02917et].[sum:Volume:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.1d6d9e90c84ze911ru3dw02917et].[yr:Date:ok]'>
            <groupfilter function='member' level='[yr:Date:ok]' member='2024' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1d6d9e90c84ze911ru3dw02917et].[:Measure Names]</column>
            <column>[federated.1d6d9e90c84ze911ru3dw02917et].[yr:Date:ok]</column>
            <column>[federated.1d6d9e90c84ze911ru3dw02917et].[none:Date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1d6d9e90c84ze911ru3dw02917et].[Multiple Values]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='tick-color' value='#00000000' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-visibility' value='on' />
            <format attr='line-pattern-only' value='solid' />
          </style-rule>
        </style>
        <panes>
          <pane id='10' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1d6d9e90c84ze911ru3dw02917et].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='11' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1d6d9e90c84ze911ru3dw02917et].[sum:Close:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1d6d9e90c84ze911ru3dw02917et].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='12' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1d6d9e90c84ze911ru3dw02917et].[Multiple Values]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1d6d9e90c84ze911ru3dw02917et].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.1d6d9e90c84ze911ru3dw02917et].[sum:Close:qk] + [federated.1d6d9e90c84ze911ru3dw02917et].[Multiple Values])</rows>
        <cols>[federated.1d6d9e90c84ze911ru3dw02917et].[none:Date:qk]</cols>
      </table>
      <simple-id uuid='{7EC0B6D2-16D9-4E40-819D-924035E18F06}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='AAPL Stock Analysis Dashboard'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='24'>2024 AAPL Stock Analysis</run>
          </formatted-text>
        </title>
      </layout-options>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#ffffff' />
        </style-rule>
      </style>
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='stock_data_tableau' name='federated.1d6d9e90c84ze911ru3dw02917et' />
      </datasources>
      <datasource-dependencies datasource='federated.1d6d9e90c84ze911ru3dw02917et'>
        <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
        <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='46' param='horz' type-v2='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='37' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
              <zone h='6500' id='38' type-v2='title' w='98400' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='91500' id='35' param='vert' type-v2='layout-flow' w='98400' x='800' y='7500'>
                <zone h='91500' id='33' type-v2='layout-basic' w='98400' x='800' y='7500'>
                  <zone h='91500' id='24' param='horz' type-v2='layout-flow' w='73000' x='800' y='7500'>
                    <zone h='91500' id='19' type-v2='layout-basic' w='73000' x='800' y='7500'>
                      <zone h='48781' id='10' param='horz' type-v2='layout-flow' w='73000' x='800' y='7500'>
                        <zone h='48781' id='5' param='vert' type-v2='layout-flow' w='73000' x='800' y='7500'>
                          <zone h='48781' id='6' type-v2='layout-basic' w='73000' x='800' y='7500'>
                            <zone h='48777' id='12' name='RSI Indicator' w='32003' x='800' y='7500'>
                              <zone-style>
                                <format attr='border-color' value='#000000' />
                                <format attr='border-style' value='none' />
                                <format attr='border-width' value='0' />
                                <format attr='margin' value='4' />
                              </zone-style>
                            </zone>
                            <zone h='48781' id='22' name='Stock Price Trend with SMA &amp; Bollinger Bands' w='40997' x='32803' y='7500'>
                              <zone-style>
                                <format attr='border-color' value='#000000' />
                                <format attr='border-style' value='none' />
                                <format attr='border-width' value='0' />
                                <format attr='margin' value='4' />
                              </zone-style>
                            </zone>
                          </zone>
                        </zone>
                      </zone>
                      <zone h='42719' id='13' name='MACD' w='73000' x='800' y='56281'>
                        <zone-style>
                          <format attr='border-color' value='#000000' />
                          <format attr='border-style' value='none' />
                          <format attr='border-width' value='0' />
                          <format attr='margin' value='4' />
                        </zone-style>
                      </zone>
                    </zone>
                  </zone>
                  <zone h='56125' id='26' name='Stock Price Trend with SMA &amp; Bollinger Bands' pane-specification-id='11' param='[federated.1d6d9e90c84ze911ru3dw02917et].[:Measure Names]' type-v2='color' w='25400' x='73800' y='42875'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='9625' id='47' name='Stock Price Trend with SMA &amp; Bollinger Bands' param='[federated.1d6d9e90c84ze911ru3dw02917et].[none:Date:qk]' show-null-ctrls='false' show-reldate-picker='false' type-v2='filter' values='database' w='25400' x='73800' y='33250'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='25750' id='52' name='Performance Summary' w='25400' x='73800' y='7500'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <layout-options>
            <title>
              <formatted-text>
                <run bold='true' fontsize='24'>2024 AAPL Stock Analysis</run>
              </formatted-text>
            </title>
          </layout-options>
          <size maxheight='1300' minheight='1300' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='60' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='59' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
                <zone h='6500' id='38' type-v2='title' w='98400' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='48777' id='12' is-fixed='true' name='RSI Indicator' w='32003' x='800' y='7500'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='9625' id='47' name='Stock Price Trend with SMA &amp; Bollinger Bands' param='[federated.1d6d9e90c84ze911ru3dw02917et].[none:Date:qk]' show-null-ctrls='false' show-reldate-picker='false' type-v2='filter' values='database' w='25400' x='73800' y='33250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='48781' id='22' is-fixed='true' name='Stock Price Trend with SMA &amp; Bollinger Bands' w='40997' x='32803' y='7500'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='56125' id='26' name='Stock Price Trend with SMA &amp; Bollinger Bands' pane-specification-id='11' param='[federated.1d6d9e90c84ze911ru3dw02917et].[:Measure Names]' type-v2='color' w='25400' x='73800' y='42875'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='198' h='25750' id='52' is-fixed='true' name='Performance Summary' w='25400' x='73800' y='7500'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='42719' id='13' is-fixed='true' name='MACD' w='73000' x='800' y='56281'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{A9BE4633-3852-4444-92B3-752746285031}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Stock Price Trend with SMA &amp; Bollinger Bands'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1d6d9e90c84ze911ru3dw02917et].[yr:Date:ok]' type='filter' />
            <card pane-specification-id='11' param='[federated.1d6d9e90c84ze911ru3dw02917et].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1d6d9e90c84ze911ru3dw02917et].[:Measure Names]</field>
            <field>[federated.1d6d9e90c84ze911ru3dw02917et].[sum:Close:ok]</field>
            <field>[federated.1d6d9e90c84ze911ru3dw02917et].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
        <floating-toolbar-visibility value='1' />
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{09F05863-0A75-4A8F-A853-7D7CCEFE7D7D}' />
    </window>
    <window class='worksheet' name='RSI Indicator'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.1d6d9e90c84ze911ru3dw02917et].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1d6d9e90c84ze911ru3dw02917et].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F48569BA-C7AB-43AA-A962-60DC85AC0303}' />
    </window>
    <window class='worksheet' name='MACD'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='5' param='[federated.1d6d9e90c84ze911ru3dw02917et].[:Measure Names]' type='color' />
            <card pane-specification-id='6' param='[federated.1d6d9e90c84ze911ru3dw02917et].[cnt:Calculation_1752463247228661764:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1d6d9e90c84ze911ru3dw02917et].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{82F9473A-8564-4DF7-800C-03A4E97D6B1F}' />
    </window>
    <window class='worksheet' name='Performance Summary'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1d6d9e90c84ze911ru3dw02917et].[:Measure Names]</field>
            <field>[federated.1d6d9e90c84ze911ru3dw02917et].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7C21182C-569A-4F06-8B9F-C2FD2874F923}' />
    </window>
    <window class='dashboard' maximized='true' name='AAPL Stock Analysis Dashboard'>
      <viewpoints>
        <viewpoint name='MACD'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Performance Summary' />
        <viewpoint name='RSI Indicator'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Stock Price Trend with SMA &amp; Bollinger Bands'>
          <zoom type='entire-view' />
          <highlight field='[federated.1d6d9e90c84ze911ru3dw02917et].[:Measure Names]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{36DD686F-E1C5-4437-A9CF-3CAD9D1DF5EC}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='AAPL Stock Analysis Dashboard' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='MACD' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO2dd3hc13mn3zt3esegNwIEwd7EIoqkqGZRxaJk2ZIlW5IdNzmJa9puss8+
      610nu/Gu442TZ+MUyZFLLBdJlmx1UpUSe+8ESXQQHZgBptd77/4BEhSIQRtgAII47z8Y3Dn3
      O9/ce373nvodSdM0DYFgjqIHEBoQzFX0lz+EQqGMDEQiEaxWa0bnKoqCLMsZnTsWmqahaRo6
      nW7KbWfT72zbF74PRQ8gSRIOhyNjI5mem0ql0Ov1YyfMAFVV0TQtKzcjm35n2/5s9V3TNBRF
      mXLbU/94FAhmEUIAguuS8bZrhQAE1xWaptHWE+Dvn9s3LhFkrzIoEEwTXX0hzEY9drORl3ef
      51hdJ7JOornLT2WRe9RzhQAEsxpN03j+vbPUtfmwmvRsWVXBd790Gx8eb+Z0Q7cQgOD6p6sv
      xP/8yh2YjDImw0CRvqG6iGfeOMr9mxeNem5GbQBN01BVMXgmmDyaphGJJTM+v9cfIddpxWkz
      DRZ+NRwh+W8/4p4Dr6L09496fkZvgPoLNYQSsHrF0sEBp0zJ9ih0tuzPVr+zbXui9rcfqON3
      u87xvT+8k1ynZcK2dx5vZsPSksHjidpa+p97Hsd99/HyznOUPP8Cnq8+OaK9jASg0+nQNGWw
      8CuKkokZVFXN6LzxMllxjkS2/c6m/WvJd28gyu5TLfynz27ih8/t5btfvA2dThq3bVXVOHK+
      nU986TZS4TC+f3sKvctFzle+jK6ggGBdjI4Tb2OprcNYNT+tzYwEUFRUhC0+MM1Ap9NlPDon
      RoKn3/614rumafx8x0meuGsVi8rzuGFhMScbe1i/uGTE9MCgbUVVefqVw9x7UzVGgx7fT3+K
      4447sK5bO3hOab6L2IOPEHj2WdyPfRbz0qXD7GbUBrA63BTm5WRyqkAAwOHz7bhsZpZW5AGw
      sqqAk/Vd4zpX0zR+u/MsHqeF22+oJHbyJCANKfwApXkOejQD+X/5nwn8/mViZ84OsyUGwgTT
      TjyZ4rc7a3h86wokaaDKs7Asl9pW37iqrL5AlE5viMe3rkTTNIKvv4H7M48MS1de4KS5y49s
      t5P79a8R3L59WBohAMG0c6imnU3Ly3BYTYPH9LKOFfPz+f2uc6OKQNM0fr/7HF/etgaAxIUL
      yLm5yO7h/f3FuQ46vAOznHVOJ6gqSjA4JI0QgGDaOVbXybrFxcOOP7Z1JQ0d/Xx4onlEEfiC
      US52B3BYTWjJJP4XX8L1qU+mTWvQ60gqA501kiRhvmE1sePHh6QRAhBMK5fn6pTmOYceVxRC
      23fw+WgdbT/5D0IHDqGl6VF6efd5PnnLEsJ79tL9v7+P7Y470BcUpM1LkiQ8Dgu+QBQA8/Ll
      xM7WDEkjBCCYVoKRBC6beUh3p6Yo+J56GlQV1y03s+XzD/L2i+/Q873/Q/Dtd9AudbOHognq
      zl+k/P3XSLa0kP8Xf4Zt08ZR89uwtJR3jjQAoC8qItXTM+TtIqZCCKaVTl+Ikjz74P+apuF7
      5icYFy3EfuedSJLEvAXwr8d6aXVbWXfsGNV79yJZLHgTGl8KBbDe+SiWVavGld+WlfP4zjPv
      s3X9wIix7HKheL3o8wZ6n8QbQDCttPcGKfJcEUCirg5JlgcL/2W++6XbeOiO5bzpWULBf/8O
      7q9/nV+ZF1D1v/563IUfQKeTePSO5fz6ndMAGOfPJ1HfcOX7KfhNAsG4afcGKc69soQ2sv8A
      1k0bhxR+AJNBT1m+k4IcG//00kH+5jcHuOfu9cj6iQ9srlpQQDiWpLmrH9OSJcRrawe/y6gK
      1NnWTAIz80oLMzldMIdp6w1y74ZqANRYjHhtHe7HPjti+ie2rqTXH2FReW7GU24kSeKTWxbz
      9qEGvrx1Gcm29sHvMhKA3x8gQQy1OB9VVUmlUhk5Nplzx+JyQydbc4Gy5Xe27c+074FQDLtZ
      TyqRoO/fn8G+7eMoACOc47IZcdmMKIoyKd8ri1w8+3Y/ql6PGouRjEaRDIbMBFBcXIw3GBdz
      gbLE9TwXSNU09Ho9wVdewVhUhG3DhmHVn3RcPRdoougBq8lINKFgLC1B6+7GUFGRWRvAmZPH
      /HmlGTkimLvEEylMBj2plmYStXU4H/rUuAr/VFFVkkNdmw9jVRWJhkZANIIF04g3ECXXZSF6
      9Bj2u7YiZSFo2WiU5Nnp9IUxr1hO9NixgcBp0+qBYFbTF4zSH4xl3K66vHordvo05uXLpti7
      sSlw2+juCyPn5yO7XESPHhUCEIyPYCTO93+1h7/++QfEk5n1xvT0R/BocXQ2G2SxHTISBTk2
      unwhJEnC9dnPEHz1dTESLBidSDzJO4cbOFjTxufvXsWZph7ONvWwdtHwyWxj0d0foqqlHvOq
      VdNa97+Mw2oiGE0AINtsOD5+r3gDCEYmlkjxg1/vxaCX+c4XbmX5/AI2LS/j7UP1pJSJL61s
      7w3hbLqAZe2aLHg7NjqdhKpeWSZruXG9eAMIRubVvRfYvKKcu9ZXDR4rL3Bxw8IivvPM+yws
      87B6QSErFxRiHMcIbaSrhxyzHtnjyabbI6KTJOwWI+FoErvViKTTCQEI0pNIKhy90MHffPn2
      Icc1ReEWzccaQyuNh4/R+LIXtSyPxeuWYaysRDObUA0GAtEUrc0d5NqM5OTnYC4uYkntUZyf
      v29Gqj+XKcix0dkXoto6IEIhAEFaTtR3sXZRMYaPPNk1VaXvZz9HMhpx33YLawxG1hoNtHb0
      8fMXd2J5ZT9WnUau3cTS8lzm5bpRvTqOvtVCrL2T0pXLsdx44wz+Kii81BCuLp2EAFKxEGfr
      21i1fPGUOie4djhwtpX7Ni4ccix27DiSwYD7c08MeYrPLyzkD5dX09YTxGUz4nFah3y/IZHi
      Z28epyTPMaNPf4Aij52mzivBsjIQgEZNzTn8sYG5GWIu0NQz03OBVE2juy9MaZ79SlpNI7Dj
      LXL+6KtpJ6XJEswrcKCq6rDv9Tp4ctsNAJP6XVNxXQpzrOw7c3HQTgYCkFi5Zj2BgF/MBcoS
      Mz0X6MJFLxVFLkxGw+Cx2KnTGEqKMebmTtp+Jkx2LtBlCj0Oev3RQTsZd4M6na5JOSK4dtl3
      ppVNy8uBS7E7Dx8h8MorOD/xiRn2bPLoZd3gwxHEXCDBVdS1+mjq7GdR+cCTPrzzAyK795D3
      53+G3jP7g6HpdBIuu5m+YGzg/xn2R3ANcbHbzzNvHONbD21AL+vQEgnCH35I7je/js4yduDa
      2UJZvpPWngAgBCC4RDAS5+lXjvDthzfguRSlOXb6zMC0hRmYt5NNKovdNHYM9ASlFUBb8zkO
      HjhN5lHbBbON1/fVcveNC4au1z1wAOvGm2bQq+ywsNTDoXNtJFNKegHEomHO11yYbr8EM0Qy
      pXCyvotNK8oHj6nxOIqvD33h9bfuO9dl5aZlZfx+9/n0AnA488nPs5PdSPKCa4WL3QEqitzo
      5SvFIV5zDtPSJdO+aGW6uG9jNWebeoYLQLs02GBzOcnOhveCa40zTT2sWjD0SR85eBDz6vHH
      35ltyDodX9m2ZrgAokEfDc2txOMJ8QaYI9Q097Bk3pUBLk1RSXX3YKyomEGvsk9ZvnO4AKyu
      PKyGJDXHzzPSuh9vdwdnztWO8O340RIJoqdOTdqOIHPiidRgvM7LJBobMZaXXXe9P+kY9gtD
      fT30RySWr1+GKd0ZgNFoIj/fPPm5QIqC/4UXMaTZumayiLlA47N9vqWH+cVuVFXhcjDm8MGD
      mFYsz8iHmZ7HNFGGCUBvMGC1WPD2BkhCWhGEQkGiikxBbs6k5gJhsWAoKkTr6sJQOrVhVsRc
      oPHZPlrbTk1jJy9+IPGZO28g1dND8kIt7ocfQpeBD+PxfWA1mYZelnnu3eN85s4bxrQ7VXOB
      rmZYFchgtrFh40a2PXDPiG+A4rIKqirKpsQB85o1xE6dnhJbgonR2OHjl28dxWE1cujcRfYf
      OI33qad5e95qXtp7jjONnVl5g/63p9/kUM1FAI7XttHU4ZvyPMbLMAHIegO6aZyzbV6ymNhp
      IYDpJJ5MoWka8USKvmAUk0EmnkjR9uxvcH3yQQLuPHYeq+cHv9pJXzA65fl7/eHBzz39ITp9
      wVFSZ5cZ7+TVuVyo0ShqIjHTrswZnn/vBMFInGRKGez7V/x+rBtvwrxixZC0z7x2AIDmzr6M
      FsJfTUO7d9I2ppIZF4Ck02GsqiLZ2JTR+d19QU7WtY+dUDAEDdh+sI6q4oEZnsm2NkyLR17h
      997RWt47Mvmev+37z6U9HkukMq5u7TrRMHaiEZhxAQCYly0lVlMzdsKriMaTPPPaQZ5+ZT8/
      e+MoT71ymH9/7Sgd3pl7pU4HscTkZ2k1tPdR1+rDaJBBu/Rkl0YvDifrO6Yk73T87I2DqBkI
      wBeI8OFsFUA4luTw+XaM1dUkaif+dEkkU5xv6aGrL8zZpg4+ftNCllbkDe4Gcq3R6Q2y81jd
      pO385LWDAFzs7mfPqcaMbPx251keunWg+znV24s+P39CeV8LqKrG3/78HRravEPeAhMR6YwK
      QJJg+4E6dHY7OpuN6LHjY5/0EXadGLj5fcEolUVu5hW6CEejnKzvIBCOZ8PlSZFUFM41d0/Z
      UzSRTFHT1E0iOXbfeDyRIhpP0t0X4kJLN4U5NuYVDazqU8ORgXCFswRN0+gLRgDwBgb+nqhr
      Z/fJgfLwk9cOjrtaNKMCMBv1ROMDNy/nS18k8OqrxBvG/zo71dBBhzeIx2kdcry6zMOF1mur
      sdUXjHKqvoP9Z1p4dffZjO1sP3CO/tCVnpndJxsJRcfuQHjh/RP84/Mf8treGs42dXPH2vlI
      XOrtUxQYZ8dfSlVJpjKLDfrb90+M2pBuaBvfPdOA+qvSahqcbugc/P9Ufce4bM2oAHSShPvS
      8jSdxULuN79B/89/gRIIjNuGNxClJNc+9Fhj08DbJM0+szNFKBqn8VJ/96mGgZvz9qEL9PrD
      vLzr9ODNU8YoYP5QDEUZWlce7WkXjQ9925xp7KKnP0ye68pDQ0sm0ZnMV5+alnNN3ew60ZCR
      CHzBKKPV8rcfOD+mjfq23gnnOxoZCaC3q52GlrYpcaAkzzG4PE3v8WC/927Cu/eMmD4UjfPa
      noEnaCKpDI5ZaIpC5OAhAi+/QsTXT++RE/h+9M+kfL60Gy5PN+kKaSAc45c7jrD3dBNNnQPi
      uNjVz2t7z9Hc6SMSSwze8Gg8yZv7z6XtMz9V35G2YHx4ooGfvj68zh6Jp7CZr0R80FQNJjDt
      uaa5m32nm4CBUd10YkgpSsZvipFIKSqv7x1fZ4miauw5OXb7KKNx5WhSxSBpgzFgIpEIsiwP
      xoMZ6bNON7Ai//LnSCxOQ2snR8+38PENVWxeUcF+xUrf4YOEyMWkl3lwy1IkSaKuzcvpxi7c
      NjPl+U4ikQhFHgcPbF7KhkUFGN94jUiohKUP3YszKfPirvN0KEHu/NFTWPUy75Usw1lUgDvX
      zZKKfDwOM/vOtBCMxOkLxbCZDWzbuBhJkth3poVAOI7dYsBlt7C8soC3DtXSH47jsBhx2Uxs
      WTWf3ScbCUYSuB0W2nqD3LV+ARISbx2uw2U3YzYaWFFZgNtuojjHyoIiFxUFDuwWE5FIhCXl
      HvIcJpZX5lGW7yYajWIxwLx8O6dqW7FbjdjMJko8Nk7WtWOUNRYUuXBYC4jFYthMMg/fspQc
      p5Xali7CkRiLyvN4ff8F8lw2TAaJ9YuKiUQirKoqoLLQSSgSwxdKoqaSOMw6HrRGyVm6kFhR
      CRUFDiKRCOsWFlFdkkM8mcTjsBKLxVg9v4BoPMnK+QXk2M14nBZisRg9/SE6vCEiCQVNU1m/
      sIhATKXLF8AoSyiqRnWph05fiFy7idLKPBYUuSjx2IlEInzy5iUUe2zoqotQNY14PM7FLh+N
      nf209wbRgEdvX0FrT4AuX4D5hU4SiQR5DhOJRJyHb1mKJEFhrgtNVYlEImxYUkoylaLd288v
      3jzEw7ctp6XLz6HzrRS4bXT4Qty6qpIijz0zARh1GsG4hk6nQ5ZlrFbr2CelIaFo1Ld7aezo
      Z0GJm60blnK+O0RvXE/DsQYcVhOP3b0OgG5/lH1nWlgyr4CPb14OgNNuZ+OK+SwKdxFbWkHO
      554gD1gOFOa5+eMfvMS93/kqdouBPf/4EvfWnkP2dZIsdOOz2yjTGfilrojmcIp8t41HPjYQ
      tfhcSy/dfSHyc+wU5ti5cVklR2s7aOnqpyjXwbyCAV8vtPpo9wYoznVyqOYit6+tRgLeOVxL
      ab6LBaW53HXjIgDuWL9k2O9fvmD4dbNYLOS6ncPmvNy0csGwtEVmMw/cOtCP3x+KEgjHMJvN
      nG/ppnrzMlZXlwymXbVwIK9INM6BCz7cLgcup52bo53kffyzQxa9p8tr7dLKtPewvMhMeVHe
      YGPUYjHicOgpzR8aNkcXiLOiupTF8wqGHL//ltUAVBTnDR6rnlfMh6cuYpB11LV5sVgshON9
      2G1WblkzcD0rSwfsPHDr6mE+rV824Ove00389PWDfP7jN+INdbHrRBPL5hdyvLadNYvKqLJa
      MxNAYUk52VwoJ7tcpFq7YP68Yd99dutAIdU0jeYuP/feuIDQ757F8+RXhqRbXlnItk1L2Hm8
      iQUlueSXlXBSX8mCW3KQc210dXg5d7qB1X0XaMMN7uG9IDpJwmQcuEROm5k/ffQWinOddHrH
      10b58rYNE/3pGeO2W3DbBwrxf/2DrSOm84fjuGwDs7yU7h4ksxnJPL76/2jkXuqIGGm25vzi
      iUWEvnztLlfhblhYkvE2qaNxTUz41kkDdbbLGEpLUU7WopUN34Thco9PTXMvRoOMtbOVkNuN
      nDM0Zo1OJ/GtT2/mTJOXDm+QLavmc9eNCz4Sxnsh9esX8+J7p/iTWAsvNTQPy+fxu9cOzpP/
      8rYNg3nnOscOEXLr6qox08wE7d4gBTk2lEAA3zPP4H78sRmP1zkaX7okhExGiXOd1sGHwkhc
      EyPBbocFX2DopCvj/PlI9bWDP7wgx86ahQNTpuPJFL957zSfv3sVwR07cNxzd1q7douJzSvK
      efi2ZWzbtGhYDPuqYjdmiwnjx7byRIGE96kfEzt3jqpCF3esqx6ySOTqrla48ja6mjvXVfOx
      ddXjvwDTyJ5TLWyoysP3b0/jfOABjJWVM+1S1lg8r2DMN881IYAchxn/VQNXktnM41UOvP/8
      L0SOHGFFWR5f2rYBTdN4Y18tG5aU4goM9JwY5w2vKo0HSZJ46Nal/HZPLfO/+UfY7/wY0SNH
      WbvzFRYm/GOen04UAA6reUhY8WuBZErhF2+dJBxL4Tm8G+vmTZhXrhj7xOuca0IA6Vhcns+S
      rz2J84EHSNQ10P13PyB69BiBSJzjdV1srXLhf+55nJ94YFL5lOU7KS9wsr+mA1P1AnKeeJzc
      b34D/wu/JdnaOub5VpNhyP8FOfZpeforqsrpxm5qmnvGlfbpV49S5LHx5w+vJ1Vbi/Wm6Wuf
      zCQLSvNG/f6aaANc6skf/F8v67hp+TxynFZwzsNYMQ81GqXnB3+P93wzd547SbD3MPa7t07J
      K/zBmxfzw+f3s3F5KbJOh+xy4fnqk/ie/jH2u7ZiXrkS2W5Pe+4X79vA7z48hcmoR5YkDHo5
      60//2lYvz713hny3jd7+MPdvVlhdXZQ2raZpvLa3lhyHma3rqgi8+x6mJUuQDIa06a837rlp
      9D0s5O9+97vfnUwGiUQCk2mktWOjo2ka3kCEnv4Q0bhCJKHS0tWHy2bikTuGdm9JBgOWNTdw
      aOcRljx4N8UPP4ihKP1Nv2wbBsYbxsJs1BMIx/n97vPku614nBb0DgeWtWuJ15wj+OprRI8f
      x1BWhuwciIF/2a5OJ6GTJCqKcli7eGpWyX3Ufjr+9feH+cq2Ndy+ppLVCwp56tUjbFhaiskw
      /Hl29EIHhy908OS2tSSOnyDy4S5yvvAHWVvwPpbvk0HTtIxtR+NJapq7cVhNdPqCbFpRQZHH
      MbNVIL2sY/G8AnSSjpVVhVSXemjq6KerL0Zdm4+2nsCQjZl1DgcHPfPJX7poyn15cMtinti6
      ku0H6vjBr/fS3RfGr+mxb7uP/P/yVzgfeIC+Z5/F//uX0T6yeMdmNrJpRSX3bZr6hf3pSKVU
      kimVgpyBbluX3cz9mxbx251nh/WUXOz289KHNfzRfatJnjxBcPsOcr7xNXQZPrBmM4vnFbB1
      /cJhx2e8CnTj0nKOXWjFoNexfnEJt6yqoLIkn90nWwjHkvjDMeIJheWV+axeWITDasJsyo7b
      8wpd/OkjGzl/0cv3f7UHu8WAyahn47Iy1iwswvjH30B3aB++H/4D9ttuw7JuLboMBwEzpasv
      RJ7LgnzpSaiEQiw5sQvl4Bn6Q3UYy8owVs1Hl5fPL1/aw+eM/UT/8Yeo1dXkfuubaJbJ9/nP
      Vu7esJizTV1DjmVUkrzdHfhCCRZWTT5wks1sxO2wEo0NPFW/fP/wxlkomuBEXRff+8UuvvrA
      2knnORaLy3P5/h9vRS/r6O2PsOd0Cz9+9SiReJKyfA+PfOVJlGNH6fm7H5DzxS9Ma1difXsf
      Cy5t8KaGw3j/34+w33Unpuob+PUHR7lXacd14gTe5jYe1uspuftjWB5/CN2lwa5shnOZjUja
      BEcYujvbsNhc+ENhSgrzCQaD2DKcS/7R+uI7h+vYun703pPaVh/zi4fGsByJyz9rKgd5NODA
      2TY+ON7Mtx/egL6nk9DLr5Dzja9PWR4wej36J28cZ8vyMspbLxDZvRv7ffdhWrkCTdM4UNPG
      rpMX0bSBxUZ/9fimYb1U2ayjZ9v+VNh+c/85Xtx5im8/soVVC4on/gYoKCqlueECimyd0j3C
      7t04fK7M1SytLBgzzWWyFRdoy6oKNE3jx68d41sPb0DSNLTe3lEb5BNltNg6XX1h3O+9geJy
      kPcn3x7SO7VlVSU3r6ygLxjDZJCxWYwTsp1t3yfDVMUFuuemJbz4wWlkWUav12fWCK6oWjRl
      cYFmI5uWl1Fd5uHZt05i2bKF8K7d4zpP07S0Q/qJlEKXL0R/KEY4mki7NjalqLx3tBHq6zDG
      Irge+XTarllJkvA4LWkLv2Cg125B6ZU4qDPeCJ6tPLB5ET966RCt7jLc57ajpVJjdi3Wtvp4
      Zc95llXmk2M3U17oIsdu5h9e2I/dYiSRUkimVBLJFOsWl2DSFM6fbUJOxjHEolguNvKoIYL7
      sT+/pufvXMvoZZm/eOz2wXUkQgAZIkkSNywsor43zKb5lSTqGzAtHr179sj5duYVunBaTfT6
      Ixy+0MH5ll7uWVPBXR6NVHc3ir+fjtoWfMd3UJBjZ11BLjqbFV2BDdOd92NatHDae56uNz7a
      LhICmATzCp28vreWOzduJPT++2MKoLUnyJP3ryXHMdAjo6VS1O0+jO3Dl4lWVWIoL8e0aBHz
      b7qJxfn5SEZRjck2QgCTIN9lwxuMYqyaj/Lc8yh+P7Ir/f7JyZRCIBLHZTUS2X+AyJEjqH39
      5BYX4fjDr2D4yFZEqXFUpwRTg7jKk8BqNqCqGvGUiuOBbfT+049wP/ooxoXVw+rozZ1+ij12
      Qtu3k2pvx/3Ip5Fzc5GyEL1aMH6EACZJkcdGV1+IilWrMBQV0f+b5zCcLsX5qU8NEcHR2g5W
      JL0kWhvI/drXkK6x6dJzlWt2OvRsYX5xDvVtfQDoCwrI/eY3UAJBQjt2DHZ5tnT5OX68jrIT
      +3E/8bgo/NcQEx4JvppgMIjD4Rg7YRqyOSgzXRtkNHb0sf1AHV/75I2D32vJJH3P/hLF50Nz
      ODl5uolCg0r1H3wGy+rhi7hHs59N32eTfU3TUBRlym1nZE3TVLp7vBQWjC+e5PVMca6Dzr4w
      qqqh0w1UeSSDgZwvfoHXth9CF49xz/94CNlhF7061yATFkAkHCIY8OMNRsnPy53cHmFZ3E9q
      uvYI0+vAbTPR3hugyDMwJ0pjIPrysa4If/nYZpB1AxsOjvO3zrZ9tqbL/rTsETamE0qKaCyG
      v98/pXOBpprp3CNsdXURR2s7+cTNi0mmFP5jx4mBPv9tazGbJv7UF1Wg4WRrjzDRBsiAq/2O
      xJN87xe78Dgs+MNxblhYyIM3LxmsEk3W/lQymwWQjTaAEEAGpPM7FE0QiibId1mRxzFde6L2
      pwohgKGIcYApwm4xYhczMGcdYhxAMKcRAhDMafQwUL8KhUIZGYhEIhlnrihKVurocGXxSTaW
      52XT72zbF74PRQ8Dc9sn0pD1dnfQ3htg5bKBoEOiETx77M9W37PVCM7o8ajXGygunro1sALB
      TJGRAKLRCIHA9b0Xr2BukNH7pKg0s2jMAsG1hugFEsxphAAEcxohAMGcRghAMKcRAhDMaYQA
      BHMaIQDBnEYIQDCnEQIQzGmEAARzGiEAwZxGCEAwpxECEMxphAAEc5oZF0A8FSepJGckb03T
      CCfCAIQT4TGjyMWSMVLq+CKTjcfeREmpKWKp2JTanOvMuADevbCDA817ZyTv/mgfP973z0ST
      UX564Cl6Ql0jptU0jTfOvsyJtqNj2k0qSZ7Z/y94I71T6S5HLx5iR81rWQn3OFfJSAB+bw+t
      Hd2TzjwUDxJNRmj3txJPxSdtbyJomsaB5r2sLlnL704+x9LC5Rxs3jdi4eqL+JB1Mg29tWO+
      Bc52nmJF8epR7U2UhJKgydeApmn4Y/1TYnOuo2pqZivCnDkeoj29qKo6qYCl+5v3sGHeZiLx
      EIeb93NTxc0Z2UnHWMFx+6N9JFJxbq26g//7/t9y/7KH2NOwk05/B/n24fsR72vaxcaKLXQG
      2jnVfpw1ZevT2k2pKc51neXBFZ/mnQtv0hPswmPNm5Dv6a7p8dYjLC1cQZ41n30Nu7hr8X0T
      sjma7alkNgXHbfDWZSYAX283/lCcosLMg+OG4kEu9NRQ5CpG1VSOth3ixoqNGHpmmJUAAAow
      SURBVPWmTFwaxmhRITRNY3fTB9iNdj5oeI+EkmBn/ds4zW4+bHiPR9c8MWR3F1/ES5OvkVJ3
      OYqmcPDiPm4oX4dBNgyzfar1OCoq53rOYjXa2NW4k4dWfWZC25peHVkhqSQ5dHEfGyu30BXu
      oN5Xy6ZkELclZ4JXZXZHhYCpC46raio769+ZudigsWSUZm/TkAJa4anEIE9NeMGxBNDmv0gs
      GSOhDDTC9bIBk2zCqDdS7q4YUmAjiTBt/lYkpEHbVfnV6HXDb0ZvqIe+qG8wrclgosw1b1IC
      SClJmvsauXynNDRKXeVYjRPfLnU2C2Aqw6KomkqTr0EEx82E2VqIsm07m/avqbhAAsH1ghCA
      YE4jBCCY0wgBCOY0QgCCOY0QgGBOIwQgmNMIAQjmNGkFEI9N78Q0gWCmSCuAC6cO8eHeI8zM
      LH2BYPpIKwCbw008ktmeYQLBbCKtAFRVRRJrLgRzgGEC0LQEhw+dIJVMos6ERwLBNDJMAJJk
      ZN36pUQiKdFFJLjuSVvGzQ4PFr2KqAUJrnfSCsDb3YvL7USZbm8EgmkmTRsgDimVjr5gZusl
      BYJZxDABRAMh2nq92Iz6ERvBAd/URIUQCGaaYQ95qyuXFUuqOFffMWIjuD8cA01DVVUURSES
      iSDLMooyUGka6bNOp0NV1cHPyWQSWZaHHVdVFUmSkCQp488AiqIgy/Kk7KT7rGkaqVRqSF6a
      po3rs06nQ9O0UT+rqoosy+NOP5HPqVQKg8EwYpqr78N4P1++z4qiYDQaxywLmXxOJBLIsjx4
      fCpsp63leL0+XC7XCMUfZDVJIDFwAWRZxmqd+OJsGFjhL9YET6/92er75Xs51baHWdM0FZfT
      RUtXYMSTSiuqKJ1SNwSCmSFNLUdBJxtxuxyMP5CHQDA7STMQZsBqNYJOIxEX0+EE1zdp27mp
      VBJFlejq6JxufwSCaSWtAAxGEx0NTRRVlk+3PwLBtDJ8IExJ0N7RSVwnMzVROgWCa5dhAmg9
      fZqW1g5MBiPhmfBIIJhGhnWD5lZWUJrSAAPmGXBIIJhO0o4Er1uXOxO+CATTjpjyL5jTCAEI
      5jRCAII5jRCAYE4jBCCY0wgBCOY0QgCCOY0QgGBOIwQgmNPM6sAPKZ+PVGfX4P86iwVDZcWE
      9uSdqyjBIMmLrYP/SwYDxgVVSLoJPhM1jURjI+qliOKqqiCVlSG73VfyCgRItrZdyctowLhg
      wYj3SUsmidfVg6aBqqKGQujsdlQ0UrIeY/UCdAYDSr+fZHv7FbsmI8aqqgnd/4zeAKlEjEgs
      kcmpU4oaChHZfwA0lVR3N7GTJ2fapdmDohD+4IPBAhbZtw8yfHBEjxxF8flAUwnv3osajQ75
      XksmCX/wIWgqaiBA5MDB0Q1KEqF33wVFAVWl//kXQFXRFIXQu+9eCTKQiBPetQs0FaW/n+ih
      wxP2PaM3QCyWIBCJYi7IH4wMkQmTORdALilBctiR580jVluH9ZYtg1EKLkc6yAaT9Xsm7Q/a
      djjQl5ejy88jceo0lttuHbx2E8Vy+21E9x/AuHIFcq4HXX7+EP8ltxu5qBC5uJhEy0Gsd9w+
      el6ShPnGG1ElkCQdxiWLUXU6NEW7dFwCRUHKzUXOy0MuLSPeuBvLWHbTMGEBdHe2gc5AV08v
      xYUFSJKEbqKvzUtcDsUxGWwbNhB+czuyw4HB4xlieyrspyNbdqfD/kdt227eTHDHW+j0Bkzl
      5Rm/AXR5ecTQCG/fgW3LzejSROKw37KF0FtvIxmNGIuLx7RpXbsG//MvAOD5/Ofwv/Q7VFUl
      57OfGVJNs225mfCOHUgmE8aCggn7PmEBFBSVkkolcbndg7FyJlPnnmx93VBehrZrF9ZNG4fY
      uvz0z1Z7INvtjGzav2xbdrvRmc1Y1q6deN3/KqybNxN6623kwsK0vsu5uUiyjHXzpnH9Nslg
      wLSwGjSQzGZM1dVogM5gGJJOX1AAmobt5s0ZXTNJm2Q9IRgM4nA4Mjp3qmLIaIoCOt2QCyDi
      Ao3PdrprlwnapQaromkj+j7RvLRL1RlJp0O7VHXTXyWATOx+lFndC3QZKQuFfK4wVddOkiSQ
      ZUilpiyvIW8lSRqxijaZ3yDGAQRzGiEAwZxGCEAwpxECEMxphAAEcxohAMGcRghAMKcRAhDM
      aYQABHMaIQDBnEYIQDCnEQIQzGmEAARzGiEAwZwmIwHEwgG6evum2heBYNrJSACKpiPo9021
      LwLBtJPRmuDe3l70NrGJhmD2k9Ga4LyC4qxFXBAIphM9DKznDIVCGRmIRCIZZ66q6pjRD8aT
      Jh3jjQqRif1s+p1t+9ez75lEAtHDwHrOTBe2AxmfO5kLPRbZjAqRTb+zbX+2+p6tMDczuig+
      mzcim2FFsul3tu3PVt8nG35nJKZ9HKCjo5PujlaCkQitLS0kUio9HS109vgnbbuhtoaL7V10
      dbTR3dJCfXsHGiqNNacJjRysYEya62ro6PGya88+ervaCQQjeL1ekskEZ2rOTdpvJR7m0LHT
      xMJB2jq7iYYDBMMxupvr6fJnXsUEOHjgAB1NZ6mpb6OltZ1YLE48HicZj3DuQt2kfQfoaG8l
      Fk8QCoa4eLEVVdNoPnuWQGry0e06OjuJxWLEYjGam1qIR0Kcr2uYtF1NVThw8ND0vgE0TSWZ
      iNMf7CPa3U2uq5C+viC5eXn0+ZNTkAGoiQi1ra14nB7sOWb6oxp5eblMpslutLnxd17E6cnF
      5+0leLEdd2EJHk8unhzXpN3u7mwnFg5wsdOLQUrR6PezeGE1ltxc+jKLVjiIy2aiP6aQTAZp
      aO9FSSbQdDLzK8pxOWyT9l1TVZLRfto6FfydAQoLXYQUhby8PJRJPrA1TSOZSNDR2UkqlcKo
      N2Cy2nHagpP2O9jbRjwWm14BRIJ+HDl5mAwyZocLs9GEJOnw9nQQVWTymVxhKq2owmg0YpB1
      WB0uAqEobrNES0cYEz4c+Z6xjaTB4/HgcDiQ9TLB/j4KSu1YrVbUVIyQP4DfnoPLnvm24jmF
      5dxcWkl7WxuYXCzIcSLrJDr9AeKaAZzWjG1XVi8imVJB03D1O7DKCrIzn2Q0RCAQwOnJx2bK
      vBj0eXvILV1EX08H1UvmYzEbkGSZzmgIqUfCWZSfsW0tFUc2WnEZNaKqHrfNQjTkJxAIUDyO
      8IqjYXQWcMstZTMbGU4gmGnEXCDBnEYIQDArSIT9NF7sGPH7vp52un2BCdu9LmKDCq4Pdrz5
      CjHFwMZ1K0ipOg4fOsaWLRuIpnTofReRC+fz7msvEDEVYkClssjFxZ4wpnAj9hXbkAKNFHhW
      TyhP8QYQXDPYc/LxWIxcaGxg36Gj5OXmsH/PLhqbmgHQlDiKvZxCuw6bSYfP52X54jI6fREC
      gYk//WGGw6MLBB+ltakOzeTCqEZJyhaIBTHbbfSHUtgjHdQlLJiVGNULFxKOJgl0t2ByF1FR
      4KStq4eLXT5uvnHthPL8/5HqLMe7gcP1AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='84' name='Performance Summary' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='RSI Indicator' width='192'>
      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
      YII=
    </thumbnail>
    <thumbnail height='192' name='Stock Price Trend with SMA &amp; Bollinger Bands' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
